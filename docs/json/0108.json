{"tag":"document","content":[{"tag":"chapter","content":[{"tag":"text","content":[" Integrando Clojure com Java"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"label","content":[{"tag":"text","content":["capitulo-integracao-java"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"quote","content":[{"tag":"text","content":["\"The apprentice avoids all use of Java classes. The journeyman embraces Java classes. The master knows which classes to embrace and which to avoid.\""]},{"tag":"text","content":["  -- Michael Fogus, coautor do livro 'The Joy of Clojure'"]},{"tag":"ref","content":[{"tag":"text","content":["joy-of-clojure"]}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Unindo forças"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O primeiro LISP surgiu em 1959 e, desde então, versões e dialetos vem surgindo e sendo utilizados em projetos avançados e nichos. Com o Clojure parece ser a primeira vez que o LISP caminha para se tornar uma linguagem conhecida e utilizada mesmo em grandes empresas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O grande diferencial é a integração com a Máquina Virtual do Java, ou simplesmente "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Empresas pelo mundo inteiro, de gigantes como IBM e Oracle até empresas pequenas, dependem de alguma forma da "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" e de algum código escrito em Java. Ao escolher uma outra linguagem de programação, você corre o risco de ter que jogar toda essa base e todo esse investimento no lixo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vieram então o Clojure e tantas outras linguagens que se integram da mesma maneira, trazendo ganhos de produtividade e aproveitando todo o código que já existe há mais de uma década."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Com isso você tem o melhor dos dois mundos: a maturidade da JVM, com toda sua base de código, ferramentas e bibliotecas já existentes, testadas e estáveis; e uma linguagem moderna que permite o desenvolvimento rápido e simples de aplicações concorrentes sem muitos dos problemas que a linguagem Java traz."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já tive experiências em que determinada empresa só trabalhava com Java. Resolvi o problema com poucas linhas de código Clojure, gerei um pacote "]},{"tag":"italic","content":[{"tag":"text","content":["JAR"]}]},{"tag":"text","content":[" e enviei para instalação. Sendo o conteúdo do arquivo "]},{"tag":"italic","content":[{"tag":"text","content":["JAR"]}]},{"tag":"text","content":[" uma aplicação Java como qualquer outra, a instalação ocorreu sem qualquer problema e a aplicação está sendo executada em produção. No final estão todos satisfeitos, independente da linguagem que tenha sido utilizada para resolver o problema."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Aquela biblioteca que faz cálculos complexos e que levou anos para ficar redonda pode ser utilizada com Clojure sem problemas. Aquele seu servidor de aplicações que custa uma fortuna de suporte pode rodar a sua aplicação Clojure também sem problemas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A outra equipe só programa em Java e a sua em Clojure? Sem problemas. Você pode integrar ambas para rodar macio."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Convencendo o chefe"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por experiência própria, evite todo o falatório técnico se quiser convencer um chefe não-técnico a usar Clojure ou qualquer outra tecnologia que pareça diferente do que é usado atualmente."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Eu recomendo primeiro resolver um problema, mostrar resultados, causar o mínimo de danos possível, ou de preferência nenhum dano, e só depois apresentar números. Quanto tempo foi economizado, quantas linhas de código foram reduzidas e quanto do investimento da empresa foi aproveitado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["De qualquer maneira, avalie bem o terreno. Em algumas empresas uma nova linguagem não costuma ser bem aceita, mesmo com todos os benefícios."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Bytecodes: os blocos de montar da JVM"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Simplificando ao máximo"]},{"tag":"ref","content":[{"tag":"text","content":["jvm8-spec"]}]},{"tag":"text","content":[", a "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" trabalha processando pilhas de códigos chamados "]},{"tag":"italic","content":[{"tag":"text","content":["bytecodes"]}]},{"tag":"text","content":[". Cada "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" pode ter um ou dois bytes, sendo que existem 256 códigos possíveis, mesmo que nem todos sejam utilizados."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esses "]},{"tag":"italic","content":[{"tag":"text","content":["bytecodes"]}]},{"tag":"text","content":[" são processados pela "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[", que faz o meio de campo com a plataforma onde o código está sendo executado. Dessa forma você pode ter o mesmo "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" sendo executado em diferentes plataformas sem qualquer alteração."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para você ter ideia da cara que tem o "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[", vamos pegar o seguinte código Java:"]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["public class Hello {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public static void main(String[] arg) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    System.out.println(\"Olá Java\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["javap"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Após compilar o código, você pode inspecionar o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":[".class"]}]},{"tag":"text","content":[" gerado com a ferramenta "]},{"tag":"italic","content":[{"tag":"text","content":["javap"]}]},{"tag":"ref","content":[{"tag":"text","content":["javap-manual"]}]},{"tag":"text","content":[", que serve para inspecionar classes compiladas, e vem junto com o compilador do Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Usando o "]},{"tag":"italic","content":[{"tag":"text","content":["javap"]}]},{"tag":"text","content":[" teremos uma saída parecida com essa:"]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["#2 //  java/lang/System.out:Ljava/io/PrintStream;"]},{"tag":"br","content":null},{"tag":"code-text","content":["#3 //  Olá Java"]},{"tag":"br","content":null},{"tag":"code-text","content":["#4 //  java/io/PrintStream.println:(Ljava/lang/String;)V"]},{"tag":"br","content":null},{"tag":"code-text","content":["{"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public Hello();"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public static void main(java.lang.String[]);"]},{"tag":"br","content":null},{"tag":"code-text","content":["    0: getstatic     #2"]},{"tag":"br","content":null},{"tag":"code-text","content":["    3: ldc           #3"]},{"tag":"br","content":null},{"tag":"code-text","content":["    5: invokevirtual #4"]},{"tag":"br","content":null},{"tag":"code-text","content":["    8: return"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esses códigos "]},{"tag":"monospaced","content":[{"tag":"text","content":["getstatic"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["ldc"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["invokevirtual"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["return"]}]},{"tag":"text","content":[" são "]},{"tag":"italic","content":[{"tag":"text","content":["mnemônicos"]}]},{"tag":"text","content":[" para os bytecodes. Isso quer dizer que eles são nomes com algum significado para indicar que ali, na verdade, existem números. Cada número é uma instrução diferente, ou um "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" diferente."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Conhecer a fundo os "]},{"tag":"italic","content":[{"tag":"text","content":["bytecodes"]}]},{"tag":"text","content":[" pode não ser útil num primeiro momento, seja para aprender Java ou para aprender Clojure, mas é o tipo de conhecimento que pode acabar se tornando um grande diferencial profissional. É aquela história de que você não precisa saber como um motor funciona para dirigir um carro, mas em uma situação atípica isso pode acabar salvando sua pele."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você tiver tempo e disposição, é um assunto bem interessante para se estudar."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Instanciando e invocando objetos Java"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Todo o código Clojure que você escrever, mesmo que no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", vai ser compilado para "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" Java. Todo o código Java que você escrever, mesmo aquele "]},{"tag":"italic","content":[{"tag":"text","content":["Hello world"]}]},{"tag":"text","content":[" simples de tudo, vai ser compilado para "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como tudo o que a "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" enxerga é bytecode, tanto vai fazer se ele foi gerado pelo Clojure ou pelo Java. E é aí que está o pulo do gato na hora de integrar as duas linguagens. Para a "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" ambos são a mesma coisa."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Então você pode incluir classes Java no seu código Clojure sem custo adicional, nem gambiarras."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.awt.Point"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos começar instanciando a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.awt.Point"]}]},{"tag":"text","content":[". Essa classe representa logicamente um ponto num plano cartesiano e contém duas propriedades: "]},{"tag":"monospaced","content":[{"tag":"text","content":["x"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["y"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["."]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para instanciar um objeto, basta utilizar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["."]}]},{"tag":"text","content":[" logo após o nome da classe."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":[";; em Java = new java.awt.Point()"]},{"tag":"br","content":null},{"tag":"code-text","content":["(java.awt.Point.)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Point java.awt.Point[x=0,y=0]>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["new"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos usar também o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["new"]}]},{"tag":"text","content":[" para criar um objeto. Com isso temos uma cara mais familiar para quem está recém chegando do Java. Note que aqui não usamos o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["."]}]},{"tag":"text","content":[" após o nome da classe."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":[";; em Java = new java.awt.Point()"]},{"tag":"br","content":null},{"tag":"code-text","content":["(new java.awt.Point)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Point java.awt.Point[x=0,y=0]>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se quisermos instanciar um objeto usando um "]},{"tag":"italic","content":[{"tag":"text","content":["constructor"]}]},{"tag":"text","content":[" que receba argumentos, basta passá-los logo após o nome da classe. Da mesma forma que instanciamos com o construtor sem argumentos, podemos usar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["."]}]},{"tag":"text","content":[" ou o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["new"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":[" ;; em Java = new java.awt.Point(3, 4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(java.awt.Point. 3 4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Point java.awt.Point[x=3,y=4]>"]},{"tag":"br","content":null},{"tag":"code-text","content":["(new java.awt.Point 3 4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; ; #<Point java.awt.Point[x=3,y=4]>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para invocarmos um método do objeto, também existem duas formas, sendo ambas com o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["."]}]},{"tag":"text","content":[". A primeira também tem similaridade com o Java, posicionando o nome do objeto à esquerda do método ou do campo."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def ponto (java.awt.Point.))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(. ponto x)            ;; em Java = ponto.x"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 0"]},{"tag":"br","content":null},{"tag":"code-text","content":["(. ponto toString)     ;; em Java = ponto.toString()"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"java.awt.Point[x=0,y=0]"]},{"tag":"br","content":null},{"tag":"code-text","content":["(. ponto distance 3 4) ;; em Java = ponto.distance(3, 4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 5.0"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A segunda forma é mais coerente com o modo de trabalhar do Clojure, deixando a ação como primeiro item da lista e o objeto como o segundo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Os parâmetros são passados em seguida, como numa expressão qualquer do Clojure."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def ponto (java.awt.Point.))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.x ponto)             ;; em Java = ponto.x"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 0"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.toString ponto)      ;; em Java = ponto.toString()"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"java.awt.Point[x=0,y=0]"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.distance ponto 3 4)  ;; em Java = ponto.distance(3, 4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 5.0"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para acessar um método ou um campo estático, basta usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["/"]}]},{"tag":"text","content":[" entre o nome da classe e o nome do método ou do campo."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Math/PI"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Byte/MAX_VALUE"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(java.awt.Point/distance 0 0 3 4))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 5.0"]},{"tag":"br","content":null},{"tag":"code-text","content":["java.lang.Math/PI         ;; em Java = java.lang.Math.PI"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 3.141592653589793"]},{"tag":"br","content":null},{"tag":"code-text","content":["Byte/MAX_VALUE            ;; em Java = Byte.MAX_VALUE"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 127"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que, ao executar um método estático, você deve delimitar a expressão entre parênteses, como se estivesse executando uma função Clojure. Ao acessar o valor de um campo, você não utiliza parênteses, como se você estivesse acessando um "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" ou um "]},{"tag":"italic","content":[{"tag":"text","content":["binding"]}]},{"tag":"text","content":[" qualquer."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["import"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Você deve concordar que está chato ter que escrever o nome do pacote toda vez que você precisar instanciar a classe. Felizmente existe uma forma importar a classe para que não seja necessário informar o pacote, parecida com o "]},{"tag":"monospaced","content":[{"tag":"text","content":["import"]}]},{"tag":"text","content":[" do Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Basta usar, adivinhe, "]},{"tag":"monospaced","content":[{"tag":"text","content":["import"]}]},{"tag":"text","content":[" e o nome completo da classe. Atenção para o sinal de "]},{"tag":"monospaced","content":[{"tag":"text","content":["quote"]}]},{"tag":"text","content":[" antes do nome da classe."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(import 'java.awt.Point)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(new Point)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Point java.awt.Point[x=0,y=0]>"]},{"tag":"br","content":null},{"tag":"code-text","content":["(Point.)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Point java.awt.Point[x=0,y=0]>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa forma de importar uma classe Java, utilizando o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["import"]}]},{"tag":"text","content":[" é usada normalmente dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[". Para utilizarmos num código fonte, recomendo que você use a forma "]},{"tag":"monospaced","content":[{"tag":"text","content":[":import"]}]},{"tag":"text","content":[", com dois-pontos, como opção da forma "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[". Veremos um exemplo assim mais para frente."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.util.Calendar"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos pegar como exemplo um código Java que acesse um método de um objeto retornado por outro método e assim por diante. Vamos usar a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Calendar"]}]},{"tag":"text","content":[" para extrair a data e hora atuais. O comando é longo intencionalmente, para demonstrarmos diferentes formas de efetuar essas chamadas encadeadas."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["// foram removidas as declarações de classes e"]},{"tag":"br","content":null},{"tag":"code-text","content":["// métodos para simplificar o código"]},{"tag":"br","content":null},{"tag":"code-text","content":["System.out.println(Calendar.getInstance().getTime().toString());"]},{"tag":"br","content":null},{"tag":"code-text","content":["// Sat Jul 26 00:10:17 BRT 2014"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos escrever o mesmo código em Clojure usando o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["."]}]},{"tag":"text","content":[", que já conhecemos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(import 'java.util.Calendar)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.toString (.getTime (Calendar/getInstance)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Sat Jul 26 16:40:43 BRT 2014\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(. (. (Calendar/getInstance) getTime) toString)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Sat Jul 26 16:41:27 BRT 2014\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":[".."]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A segunda forma fica mais difícil de ler e de escrever, mas existe um pouco operador que simplifica essas chamadas encadeadas. Vamos reescrever a expressão usando o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":[".."]}]},{"tag":"text","content":[", que existe exatamente para isso."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(.. (Calendar/getInstance) getTime toString)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Sat Jul 26 16:43:14 BRT 2014\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Você pode também utilizar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["->"]}]},{"tag":"text","content":[", que já conhemos, para poder encadear as chamadas de função."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(-> (Calendar/getInstance)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    .getTime"]},{"tag":"br","content":null},{"tag":"code-text","content":["    .toString)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Sat Jul 26 16:47:11 BRT 2014\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa última forma acaba sendo preferida por ter mais cara de Clojure e diminuir bastante a diferença entre chamadas Java e Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já que estamos trabalhando com a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Calendar"]}]},{"tag":"text","content":[", vamos criar uma data de um jeito propositadamente extenso. Isso vai servir para explicarmos um novo operador. Primeiro vamos olhar o código equivalente em Java. Novamente as declarações de classes e métodos foram removidas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos modificar um objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["Calendar"]}]},{"tag":"text","content":[" para que ele fique com a data de nascimento de um Gustavo."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["Calendar gustavo = Calendar.getInstance();"]},{"tag":"br","content":null},{"tag":"code-text","content":["gustavo.set(Calendar.DAY_OF_MONTH, 10);"]},{"tag":"br","content":null},{"tag":"code-text","content":["gustavo.set(Calendar.MONTH, Calendar.FEBRUARY);"]},{"tag":"br","content":null},{"tag":"code-text","content":["gustavo.set(Calendar.YEAR, 2010);"]},{"tag":"br","content":null},{"tag":"code-text","content":["System.out.println(gustavo.getTime().toString());"]},{"tag":"br","content":null},{"tag":"code-text","content":["// Wed Feb 10 17:02:37 BRST 2010"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como um objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["Calendar"]}]},{"tag":"text","content":[" do Java é mutável, você executa várias operações e modifica um mesmo objeto até que ele esteja da maneira desejada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em Clojure vamos criar um binding "]},{"tag":"monospaced","content":[{"tag":"text","content":["gustavo"]}]},{"tag":"text","content":[" e sair modificando como se imutabilidade fosse uma preocupação só do Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Bem, na verdade a mutabilidade é sim uma preocupação só do Clojure nesse caso. É uma boa prática isolar toda a parte mutável das suas aplicações em pontos que você possa controlar."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [gustavo (Calendar/getInstance)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.set gustavo Calendar/DAY_OF_MONTH 10)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.set gustavo Calendar/MONTH Calendar/FEBRUARY)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.set gustavo Calendar/YEAR 2010)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toString (.getTime gustavo)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Wed Feb 10 17:07:38 BRST 2010\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["doto"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nossos códigos Java e Clojure fazem exatamente a mesma coisa, mas perceba que escrevemos "]},{"tag":"monospaced","content":[{"tag":"text","content":["gustavo"]}]},{"tag":"text","content":[" em cada uma das linhas. Podemos evitar isso usando o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["doto"]}]},{"tag":"text","content":[". Esse operador simplifica a manipulação de um objeto mutável."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [gustavo (doto (Calendar/getInstance)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    (.set Calendar/DAY_OF_MONTH 10)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    (.set Calendar/MONTH Calendar/FEBRUARY)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    (.set Calendar/YEAR 2010))]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toString (.getTime gustavo)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Wed Feb 10 17:24:31 BRST 2010\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["bean"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Finalmente, temos também o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["bean"]}]},{"tag":"text","content":[", que recebe um objeto Java qualquer e o converte em um mapa Clojure, com direito a imutabilidade e tudo o que temos direito."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(import 'java.util.Date)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def hoje (bean (Date.)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["hoje"]},{"tag":"br","content":null},{"tag":"code-text","content":["; {:day 6, :date 26, :time 1406406543872, :month 6,"]},{"tag":"br","content":null},{"tag":"code-text","content":["   :seconds 3, :year 114, :class java.util.Date,"]},{"tag":"br","content":null},{"tag":"code-text","content":["   :timezoneOffset 180, :hours 17, :minutes 29}"]},{"tag":"br","content":null},{"tag":"code-text","content":["(str \"Hoje é dia \" (:date hoje))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Hoje é dia 26"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Entrando na toca do coelho"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Daqui para frente, apenas o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" não vai ser suficiente para o que vamos apresentar. Isso acontece porque o código que escrevemos no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" é avaliado e compilado em memória, o que não nos deixa ver como as coisas acontecem por baixo dos panos. Por isso vamos criar um projeto bem simples, apenas para brincarmos com a compilação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No terminal do seu sistema operacional, digite "]},{"tag":"monospaced","content":[{"tag":"text","content":["lein new capitulo08"]}]},{"tag":"text","content":[". Ele será a nossa base para os experimentos que vamos fazer."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos modificar o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["project.clj"]}]},{"tag":"text","content":[", que está no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":[", onde podemos encontrar toda a estrutura do projeto, adicionando a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":main capitulo08.core"]}]},{"tag":"text","content":[". Nosso arquivo vai ficar com essa cara:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defproject capitulo08 \"0.1.0-SNAPSHOT\""]},{"tag":"br","content":null},{"tag":"code-text","content":["  ;; descricao, url, licença"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :dependencies [[org.clojure/clojure \"1.7.0\"]]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :main capitulo08.core)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"italic","content":[{"tag":"text","content":["Lembrando que a versão do Clojure pode variar de acordo com a época em que você acompanhar os exemplos."]}]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos editar o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08/core.clj"]}]},{"tag":"text","content":[", conforme o código a seguir."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo08.core)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn ola-mundo []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.println (System/out) \"Olá, mundo!\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn -main [& args]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (ola-mundo))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Criamos uma função chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["ola-mundo"]}]},{"tag":"text","content":[", que imprime um texto no console, que é chamada pela função principal da nossa pequena aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ao executarmos a aplicação, veremos a mensagem impressa na tela."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["lein run"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Olá, mundo!"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Até aqui, nada de excepcional."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ainda dentro do diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":[", vamos abrir o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[". Lembre-se que eu disse que "]},{"tag":"italic","content":[{"tag":"text","content":["apenas o REPL não seria suficiente"]}]},{"tag":"text","content":[", e não que ele não seria mais necessário."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"monospaced","content":[{"tag":"text","content":["lein repl"]}]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos compilar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08.core"]}]},{"tag":"text","content":[" através da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["compile"]}]},{"tag":"text","content":[". Sim, podemos compilar código Clojure dentro do próprio Clojure, forçando a geração de "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" Java na hora que bem entendermos."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["compile"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(compile (symbol \"capitulo08.core\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; capitulo08.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["exit"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Após executarmos a compilação, vamos sair do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" e, no terminal, vamos entrar no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["target/classes"]}]},{"tag":"text","content":[" para listar os arquivos que foram gerados."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Dentro deste diretório, temos um diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":[", por causa do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08.core"]}]},{"tag":"text","content":[" em que escrevemos nossas funções. Lembre-se de que, assim como acontece com os pacotes Java, os "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" do Clojure também são organizados de forma hierárquica, usando árvores de diretórios."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Finalmente, dentro do diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":[" temos uma série de arquivos de extensão "]},{"tag":"monospaced","content":[{"tag":"text","content":["class"]}]},{"tag":"text","content":[", que nada mais são do que arquivos contendo "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" Java. Quando você compila uma aplicação Java, são gerados os arquivos com a mesma extensão."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Recomendo a leitura da excelente série de textos de Nicholas Kariniemi"]},{"tag":"ref","content":[{"tag":"text","content":["kariniemi-clojure"]}]},{"tag":"text","content":[" para que você entenda o porquê de tantos arquivos. Para os propósitos do livro, vamos focar em apenas um deles."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Dentre os vários arquivos, temos um chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["core$ola_mundo.class"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Lembre-se que criamos uma função chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["ola-mundo"]}]},{"tag":"text","content":[" dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08.core"]}]},{"tag":"text","content":[" e que estamos dentro de um diretório chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":[". Com isso podemos concluir que um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" Clojure é uma classe contendo classes para cada função."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos olhar o que há dentro deste arquivo, usando nossa nova ferramenta preferida, o "]},{"tag":"monospaced","content":[{"tag":"text","content":["javap"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["$ javap core$ola_mundo.class"]},{"tag":"br","content":null},{"tag":"code-text","content":["Compiled from \"core.clj\""]},{"tag":"br","content":null},{"tag":"code-text","content":["public final class capitulo08.core$ola_mundo extends"]},{"tag":"br","content":null},{"tag":"code-text","content":["clojure.lang.AFunction {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public static {};"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public capitulo08.core$ola_mundo();"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public java.lang.Object invoke();"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Temos então esse trecho de código "]},{"tag":"monospaced","content":[{"tag":"text","content":["static"]}]},{"tag":"text","content":[" que é executado quando a classe é carregada pela JVM e dois métodos: um construtor e um método "]},{"tag":"monospaced","content":[{"tag":"text","content":["invoke"]}]},{"tag":"text","content":[". Este método "]},{"tag":"monospaced","content":[{"tag":"text","content":["invoke"]}]},{"tag":"text","content":[" é o que contém o código da nossa função, e é invocado sempre que mandamos executar a função no Clojure."]},{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Classes internas do Java"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma classe interna, no Java, é uma classe definida dentro de outras classe. Vamos olhar o código a seguir, ignorando boas práticas para fins de didática, para entendermos como isso funciona."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["public class Ola {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  private static class Mundo {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    public void exibirMensagem() {"]},{"tag":"br","content":null},{"tag":"code-text","content":["      System.out.println(\"Olá mundo\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["    }"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que todos os arquivos começam com "]},{"tag":"monospaced","content":[{"tag":"text","content":["core"]}]},{"tag":"text","content":[". Isso acontece porque o Java gera um arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["class"]}]},{"tag":"text","content":[" para cada classe, incluindo aí classes internas. Podemos ver isso claramente nos nomes de arquivos que contém o caracter "]},{"tag":"monospaced","content":[{"tag":"text","content":["$"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Temos aqui uma classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Ola"]}]},{"tag":"text","content":[" que contém uma classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Mundo"]}]},{"tag":"text","content":[". Ao compilarmos o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Ola.java"]}]},{"tag":"text","content":[", teremos um arquivo binário chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["Ola.class"]}]},{"tag":"text","content":[", contendo a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Ola"]}]},{"tag":"text","content":[", e um arquivo chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["Ola$Mundo.class"]}]},{"tag":"text","content":[", contendo a classe interna "]},{"tag":"monospaced","content":[{"tag":"text","content":["Mundo"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["$ javac Ola.java"]},{"tag":"br","content":null},{"tag":"code-text","content":["$ ls"]},{"tag":"br","content":null},{"tag":"code-text","content":["Ola$Mundo.class  Ola.class  Ola.java"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se tivessemos uma classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Estranho"]}]},{"tag":"text","content":[" dentro da classe interna "]},{"tag":"monospaced","content":[{"tag":"text","content":["Mundo"]}]},{"tag":"text","content":[", o compilador criaria um arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Ola$Mundo$Estranho.class"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A JVM não dá suporte a "]},{"tag":"italic","content":[{"tag":"text","content":["high order functions"]}]},{"tag":"text","content":[" e nem a invocação de funções sem a criação de classes ou objetos. Para dar a volta nessa limitação e podermos ter uma linguagem funcional, internamente cada função do Clojure é implementada como uma classe Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso a função seja anônima, o compilador Clojure vai atribuir o nome "]},{"tag":"monospaced","content":[{"tag":"text","content":["fn_"]}]},{"tag":"text","content":[" seguido de um número aleatório."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Enquanto escrevo os exemplos, tenho aqui o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["core$fn_1209.class"]}]},{"tag":"text","content":[" no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":[", mas o número pode variar na sua máquina."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como o Java permite que você passe objetos por parâmetro e receba objetos como resultado, podemos tratar a execução de uma função como um objeto sem usar qualquer truque que comprometa o tempo de execução."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.lang.AFunction"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A nossa classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08.core$ola_mundo"]}]},{"tag":"text","content":[" estende a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["AFunction"]}]},{"tag":"text","content":[" da biblioteca padrão do Clojure. Toda função Clojure deve herdar de "]},{"tag":"monospaced","content":[{"tag":"text","content":["AFunction"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_08/uml_funcao.png \"Diagrama de classes de uma função\" w=95% label=cap08-uml-funcao"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No diagrama "]},{"tag":"ref-label","content":[{"tag":"text","content":["cap08-uml-funcao"]}]},{"tag":"text","content":[" vemos algumas implicações interessantes dessa herança."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.lang.AFn"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.lang.IFn"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.lang.Fn"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A primeira é que toda função implementa "]},{"tag":"monospaced","content":[{"tag":"text","content":["AFunction"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["AFn"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["IFn"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["Fn"]}]},{"tag":"text","content":[", numa clara mostra de amor à herança por parte dos criadores da linguagem."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.lang.IObj"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Toda função implementa também a interface "]},{"tag":"monospaced","content":[{"tag":"text","content":["IObj"]}]},{"tag":"text","content":[", que é o pedaço da linguagem responsável por guardar os metadados que vimos no capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-dados"]}]},{"tag":"text","content":[". Se você quiser que seu objeto Java tenha suporte aos metadados do Clojure, basta implementar esta interface. Vamos ver mais para frente como criar uma classe no Java e utilizá-la no Clojure."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.util.Comparator"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Funções Clojure também implementam a interface Java "]},{"tag":"monospaced","content":[{"tag":"text","content":["Comparator"]}]},{"tag":"text","content":[", o que significa que você pode usá-las como critério de ordenação na "]},{"tag":"italic","content":[{"tag":"text","content":["API"]}]},{"tag":"text","content":[" padrão do Java."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.jang.Runnable"]}]},{"tag":"index","content":[{"tag":"text","content":["thread"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Finalmente, encerrando nosso passeio pela árvore genealógica de uma função Clojure, podemos ver também que toda função implementa "]},{"tag":"monospaced","content":[{"tag":"text","content":["Runnable"]}]},{"tag":"text","content":[", permitindo que seja invocada por uma "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" sem qualquer tipo de truque ou gambiarra."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.util.concurrent.Callable"]}]},{"tag":"index","content":[{"tag":"text","content":["future"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["As funções implementam também a interface "]},{"tag":"monospaced","content":[{"tag":"text","content":["Callable"]}]},{"tag":"text","content":[", que é a irmã mais nova de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Runnable"]}]},{"tag":"text","content":[", cuja principal diferença é retornar um valor quando usamos "]},{"tag":"italic","content":[{"tag":"text","content":["futures"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Os conceitos de "]},{"tag":"italic","content":[{"tag":"text","content":["futures"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":[" serão explicados em detalhes no capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-concorrencia"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Voltando ao nosso arquivo, se olharmos o "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" gerado para o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["invoke"]}]},{"tag":"text","content":[", vamos avaliar o que o Clojure gera durante sua compilação para tirarmos de uma vez por todas a aura de mágica e bruxaria."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vou tomar a liberdade de quebrar o resultado em vários trechos para que seja possível explicar cada um deles."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que dessa vez vamos usar o parâmetro "]},{"tag":"monospaced","content":[{"tag":"text","content":["-c"]}]},{"tag":"text","content":[", que exibe os mnemônicos contidos em cada método."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["$ javap -c core$ola_mundo.class"]},{"tag":"br","content":null},{"tag":"code-text","content":["public final class capitulo08.core$ola_mundo extends"]},{"tag":"br","content":null},{"tag":"code-text","content":["clojure.lang.AFunction {"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Toda classe Java contém uma área de declaração de constantes. Essas constantes são numeradas. Vamos listar as contantes aqui para explicar em seguida."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["// #10 Method clojure/lang/AFunction.\"<init>\":()V"]},{"tag":"br","content":null},{"tag":"code-text","content":["// #18 Field java/lang/System.out:Ljava/io/PrintStream;"]},{"tag":"br","content":null},{"tag":"code-text","content":["// #20 class java/io/PrintStream"]},{"tag":"br","content":null},{"tag":"code-text","content":["// #22 String Olá, mundo!"]},{"tag":"br","content":null},{"tag":"code-text","content":["// #24 class java/lang/String"]},{"tag":"br","content":null},{"tag":"code-text","content":["// #28 Method java/io/PrintStream.println:(Ljava/lang/String;)V"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Inicialmente temos um bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["static"]}]},{"tag":"text","content":[", que é executado na primeira vez que a classe for carregada pela JVM. Em seguida temos o construtor da classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["ola_mundo"]}]},{"tag":"text","content":[", que nada mais faz do que invocar o construtor de sua classe mãe. Esse código pode ser interpretado como "]},{"tag":"monospaced","content":[{"tag":"text","content":["super()"]}]},{"tag":"text","content":[" em Java."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  public static {};"]},{"tag":"br","content":null},{"tag":"code-text","content":["    Code:"]},{"tag":"br","content":null},{"tag":"code-text","content":["       0: return"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public capitulo08.core$ola_mundo();"]},{"tag":"br","content":null},{"tag":"code-text","content":["    Code:"]},{"tag":"br","content":null},{"tag":"code-text","content":["       0: aload_0"]},{"tag":"br","content":null},{"tag":"code-text","content":["       1: invokespecial #10"]},{"tag":"br","content":null},{"tag":"code-text","content":["       4: return"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E chegamos a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["invoke"]}]},{"tag":"text","content":[". A linha "]},{"tag":"italic","content":[{"tag":"text","content":["0"]}]},{"tag":"text","content":[" carrega o objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["System.out"]}]},{"tag":"text","content":[", a linha "]},{"tag":"italic","content":[{"tag":"text","content":["6"]}]},{"tag":"text","content":[" carrega o texto "]},{"tag":"italic","content":[{"tag":"text","content":["Olá, mundo!"]}]},{"tag":"text","content":[" e a linha "]},{"tag":"italic","content":[{"tag":"text","content":["11"]}]},{"tag":"text","content":[" invoca o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["println"]}]},{"tag":"text","content":[" do objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["System.out"]}]},{"tag":"text","content":[" usando o texto "]},{"tag":"italic","content":[{"tag":"text","content":["Olá, mundo!"]}]},{"tag":"text","content":[" como parâmetro."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  public java.lang.Object invoke();"]},{"tag":"br","content":null},{"tag":"code-text","content":["    Code:"]},{"tag":"br","content":null},{"tag":"code-text","content":["       0: getstatic     #18"]},{"tag":"br","content":null},{"tag":"code-text","content":["       3: checkcast     #20"]},{"tag":"br","content":null},{"tag":"code-text","content":["       6: ldc           #22"]},{"tag":"br","content":null},{"tag":"code-text","content":["       8: checkcast     #24"]},{"tag":"br","content":null},{"tag":"code-text","content":["      11: invokevirtual #28"]},{"tag":"br","content":null},{"tag":"code-text","content":["      14: aconst_null"]},{"tag":"br","content":null},{"tag":"code-text","content":["      15: areturn"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Tudo isso, de forma bem resumida, significa que executamos "]},{"tag":"monospaced","content":[{"tag":"text","content":["System.out.println(\"Olá, mundo!\")"]}]},{"tag":"text","content":[". Se você escrever esse código em Java e comparar os "]},{"tag":"italic","content":[{"tag":"text","content":["bytecodes"]}]},{"tag":"text","content":[", vai ver exatamente a mesma sequencia de instruções, com exceção dos números das constantes, que podem variar de acordo com o tamanho do código e a ordem das declarações."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["As linhas "]},{"tag":"italic","content":[{"tag":"text","content":["14"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["15"]}]},{"tag":"text","content":[" simplesmente equivalem a um "]},{"tag":"monospaced","content":[{"tag":"text","content":["return null"]}]},{"tag":"text","content":[", já que nossa função não retorna valor algum."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Compilação Ahead-of-time"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por padrão, o Clojure compila o código e a JVM carrega os "]},{"tag":"italic","content":[{"tag":"text","content":["bytecodes"]}]},{"tag":"text","content":[" gerados sem a necessidade de arquivos "]},{"tag":"monospaced","content":[{"tag":"text","content":["class"]}]},{"tag":"text","content":[". Isso permite que você recarregue ou substitua partes do código em tempo de execução, como vimos no capítulo sobre funções."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esse modo, esquematizado na figura "]},{"tag":"ref-label","content":[{"tag":"text","content":["cap08-dynamic-compilation"]}]},{"tag":"text","content":[", é chamado de "]},{"tag":"italic","content":[{"tag":"text","content":["compilação dinâmica"]}]},{"tag":"text","content":[", e só acontece quando o código é utilizado ou referenciado."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_08/clojure_dynamic_compilation.png \"Compilação dinâmica\" w=95% label=cap08-dynamic-compilation"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Enquanto isso traz uma série de benefícios em termos de flexibilidade e dinamismo, existem situações em que é necessário ter os arquivos já compilados antes mesmo da aplicação ser executada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Isso acontece quando você não quer, ou não pode, fornecer os fontes da aplicação, ou quando existe código Java que faz uso do seu código Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ao contrário do que possa parecer, pré-compilar sua aplicação não a torna necessariamente mais rápida. Pode ocorrer um pequeno ganho durante a carga da aplicação, mas na prática o que acontece é a alteração do momento em que o código é compilado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa pré-compilação é chamada de "]},{"tag":"italic","content":[{"tag":"text","content":["compilação ahead-of-time"]}]},{"tag":"text","content":[", ou simplesmente "]},{"tag":"italic","content":[{"tag":"text","content":["AOT"]}]},{"tag":"text","content":[". Como o nome diz, é uma compilação \"antes da hora\", mas a forma como o código é carregado pelo Clojure permanece a mesma."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_08/clojure_aot_compilation.png \"Compilação AOT\" w=95% label=cap08-aot-compilation"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um novo projeto para demonstrarmos quando a compilação ocorre com e sem "]},{"tag":"italic","content":[{"tag":"text","content":["AOT"]}]},{"tag":"text","content":[" e também para aprendermos a configurar o projeto para utilizar esse recurso. A sequencia de comandos a seguir deve ser digitada no terminal do seu sistema operacional."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["lein new aot"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos editar o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["project.clj"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defproject aot \"0.1.0-SNAPSHOT\""]},{"tag":"br","content":null},{"tag":"code-text","content":["  :dependencies [[org.clojure/clojure \"1.7.0\"]]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :main aot.core)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que a versão do Clojure pode variar."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em seguida vamos modificar o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/aot/core.clj"]}]},{"tag":"text","content":[" criando uma macro e a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[". A ideia aqui é mostrarmos o momento em que ocorre o tempo de compilação."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns aot.core)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defmacro uma-macro []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Compilando\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn -main [& args]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (uma-macro)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Tempo de execução\"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A macro "]},{"tag":"monospaced","content":[{"tag":"text","content":["uma-macro"]}]},{"tag":"text","content":[" será executada em tempo de compilação e a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[" será executada em tempo de execução. Veremos macros e fases de execução da aplicação com detalhes no capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-macros"]}]},{"tag":"text","content":[". O propósito desse exemplo é demonstrar como o momento da compilação muda de lugar, mas continua existindo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos executar nosso exemplo executando "]},{"tag":"monospaced","content":[{"tag":"text","content":["lein run"]}]},{"tag":"text","content":[" no terminal:"]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["$ lein run"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Compilando"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Tempo de execução"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Aqui não temos novidade. Mandamos executar a aplicação, ela foi compilada e em seguida executada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora habilitar a compilação "]},{"tag":"italic","content":[{"tag":"text","content":["AOT"]}]},{"tag":"text","content":[" adicionando a última linha no arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["project.clj"]}]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defproject aot \"0.1.0-SNAPSHOT\""]},{"tag":"br","content":null},{"tag":"code-text","content":["  :dependencies [[org.clojure/clojure \"1.7.0\"]]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :main aot.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :aot :all)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":aot :all"]}]},{"tag":"text","content":[" diz que devemos compilar previamente todos os "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" da nossa aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos adicionar a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":gen-class"]}]},{"tag":"text","content":[" na declaração de "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["aot.core"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns aot.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class))"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; e aqui vem o restante do código"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos então executar "]},{"tag":"monospaced","content":[{"tag":"text","content":["lein uberjar"]}]},{"tag":"text","content":[" para compilar e gerar um pacote "]},{"tag":"monospaced","content":[{"tag":"text","content":["JAR"]}]},{"tag":"text","content":[" sem executar a nossa aplicação. Um pacote "]},{"tag":"monospaced","content":[{"tag":"text","content":["JAR"]}]},{"tag":"text","content":[" é um arquivo compactado contendo arquivos compilados em "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" Java."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["$ lein uberjar"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Compiling aot.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Compilando"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Created /target/aot-0.1.0-SNAPSHOT.jar"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Created /target/aot-0.1.0-SNAPSHOT-standalone.jar"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Na primeira linha vemos que "]},{"tag":"monospaced","content":[{"tag":"text","content":["aot.core"]}]},{"tag":"text","content":[" está sendo compilado. A mensagem "]},{"tag":"italic","content":[{"tag":"text","content":["Compilando"]}]},{"tag":"text","content":[", que está dentro da macro  "]},{"tag":"monospaced","content":[{"tag":"text","content":["uma-macro"]}]},{"tag":"text","content":[" comprova isso. Em seguida são criados dois arquivos "]},{"tag":"italic","content":[{"tag":"text","content":["JAR"]}]},{"tag":"text","content":[": um contendo apenas a aplicação e outro contendo a aplicação e os binários do próprio Clojure, permitindo que a aplicação seja executada sem termos que nos preocupar se o Clojure está instalado ou não."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos executar como um arquivo binário Java qualquer. Lembre-se de não digitar o caracter "]},{"tag":"monospaced","content":[{"tag":"text","content":["$"]}]},{"tag":"text","content":[". Ele representa o prompt do terminal:"]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["$ java -jar target/aot-0.1.0-SNAPSHOT-standalone.jar"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Tempo de execução"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Aqui vimos apenas a mensagem "]},{"tag":"italic","content":[{"tag":"text","content":["Tempo de execução"]}]},{"tag":"text","content":[" e não vemos mais a mensagem "]},{"tag":"italic","content":[{"tag":"text","content":["Compilando"]}]},{"tag":"text","content":[". Com isso fica claro que a compilação já ocorreu ao compilarmos o código e gerarmos os arquivos "]},{"tag":"italic","content":[{"tag":"text","content":["JAR"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Durante o tempo de execução temos apenas código sendo executado, sem qualquer sinal de compilação. Na prática é como uma aplicação escrita em Java puro funciona."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Criando classes Java dentro do Clojure"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Fazendo uso de "]},{"tag":"monospaced","content":[{"tag":"text","content":["gen-class"]}]},{"tag":"text","content":[" podemos criar uma classe Java dentro do próprio Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso vamos criar um arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/gen.clj"]}]},{"tag":"text","content":[" dentro desse projeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["aot"]}]},{"tag":"text","content":[" e vamos declarar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" dessa forma:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo08.gen"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name \"capitulo08.Uia\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    :methods [[hello [] void]]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":name"]}]},{"tag":"text","content":[" informa ao compilador que queremos criar uma classe Java com um diferente do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual. Aqui nossa classe vai se chamar "]},{"tag":"monospaced","content":[{"tag":"text","content":["Uia"]}]},{"tag":"text","content":[", e estará em um pacote chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos dizer também que queremos que um objeto do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Uia"]}]},{"tag":"text","content":[" tenha um método chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["hello"]}]},{"tag":"text","content":[". Vamos informar que ele não recebe nenhum parâmetro passando um vetor vazio."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se quiséssemos parâmetros, bastaria informarmos nesse vetor. Por fim, vamos dizer que esse método é do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["void"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para criarmos nosso método "]},{"tag":"monospaced","content":[{"tag":"text","content":["hello"]}]},{"tag":"text","content":[", basta o código abaixo:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -hello [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Olá!\"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro, note que existe um "]},{"tag":"monospaced","content":[{"tag":"text","content":["-"]}]},{"tag":"text","content":[" antes do nome da função. Esse é o prefixo padrão para informarmos ao Clojure que aquela função deve ser utilizada na criação do objeto. Qualquer função sem o prefixo vai ser considerado um código comum do Clojure e desconsiderado para a criação do objeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mais para frente vamos aprender a modificar esse prefixo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note também que passâmos um parâmetro "]},{"tag":"monospaced","content":[{"tag":"text","content":["this"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Todo método implementado num objeto criado com "]},{"tag":"monospaced","content":[{"tag":"text","content":["gen-class"]}]},{"tag":"text","content":[" precisa receber por parâmetro uma referência a si mesmo. Dessa forma poderemos modificar ou acessar os dados encapsulados. Vamos chamar esse parâmetro de "]},{"tag":"monospaced","content":[{"tag":"text","content":["this"]}]},{"tag":"text","content":[" apenas por convenção."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos abrir o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" e mandar compilar nosso novo "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" usando o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["compile"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["compile"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(compile (symbol \"capitulo08.gen\"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos importar nossa classe e criar um objeto, chamando o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["hello"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(import 'capitulo08.Uia)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hello (Uia.))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Olá!"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que nosso método "]},{"tag":"monospaced","content":[{"tag":"text","content":["hello"]}]},{"tag":"text","content":[" não usa nenhuma informação do próprio objeto. Podemos então transformá-lo num método estático, ou método de classe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso, basta adicionar a anotação "]},{"tag":"monospaced","content":[{"tag":"text","content":["#^{:static true}"]}]},{"tag":"text","content":[" na declaração do método. Até a versão utilizada para escrever esse livro, a versão curta "]},{"tag":"monospaced","content":[{"tag":"text","content":["^static"]}]},{"tag":"text","content":[" não estava funcionando."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo08.gen"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name \"capitulo08.Uia\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    :methods [#^{:static true} [hello [] void]]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E o resto do código continua igual, com exceção do parâmetro "]},{"tag":"monospaced","content":[{"tag":"text","content":["this"]}]},{"tag":"text","content":[", que não é mais necessário."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -hello []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Olá!\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(capitulo08.Uia/hello)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Olá!"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você achar que esse "]},{"tag":"monospaced","content":[{"tag":"text","content":["-"]}]},{"tag":"text","content":[" não é suficiente para deixar explícito que estamos implementando um método, você pode mudar o prefixo usando a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":prefix"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo08.gen"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name \"capitulo08.Uia\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    :methods [#^{:static true} [hello [] void]]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :prefix \"method-\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn method-hello []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Olá!\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(capitulo08.Uia/hello)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Olá!"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O compilador vai procurar por todas as funções cujo nome começam com o texto informado na opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":prefix"]}]},{"tag":"text","content":[" para associar aos métodos da classe que estamos criando."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Estendendo classes e implementando interfaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nós podemos estender classes e implementar interfaces Java usando código Clojure. Para isso usamos a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":gen-class"]}]},{"tag":"text","content":[" ao declararmos o nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Dessa forma, as funções que estão dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" podem fazer parte do objeto que estamos criando."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um novo projeto chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["genclass"]}]},{"tag":"text","content":[" e modificar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["genclass.core"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns genclass.core"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos dizer ao compilador que este "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" vai gerar "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" Java em disco numa classe chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["genclass.MeuNumero"]}]},{"tag":"text","content":[" ."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name genclass.MeuNumero"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.Number"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E então vamos dizer que a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["genclass.MeuNumero"]}]},{"tag":"text","content":[" estende a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Number"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["    :extends java.lang.Number))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos rechear o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[" com uma mensagem engraçadinha:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -main [& args]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Vá brincar no REPL\"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Classes abstratas e interfaces"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso você não tenha intimidade com Java, vamos dar uma revisada no que são classes abstratas e interfarces."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma classe abstrata não pode ser instanciada diretamente. Você deve criar uma classe filha que implemente qualquer método abstrato que a classe mãe tenha, e só então essa classe filha, caso também não seja abtrata, pode ser instanciada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma classe que não é declarada como abstrata e não tem nenhum método sem implementação é chamada de "]},{"tag":"italic","content":[{"tag":"text","content":["classe concreta"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma interface funciona como uma classe abstrata, mas contém apenas declarações de métodos, campos, constantes e enumerações e deve ser implementada por uma classe ou estendida por outra interface para ser usada. Essa classe pode ser abstrata ou concreta."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma classe Java só pode "]},{"tag":"italic","content":[{"tag":"text","content":["estender"]}]},{"tag":"text","content":[" uma classe, abstrata ou não, mas pode "]},{"tag":"italic","content":[{"tag":"text","content":["implementar"]}]},{"tag":"text","content":[" tantas interfaces quantas forem necessárias."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Recapitulando, nosso código inteiro ficou assim:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns genclass.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name genclass.MeuNumero"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :extends java.lang.Number))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn -main [& args]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Vá brincar no REPL\"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos brincar no REPL instanciando um objeto do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["MeuNumero"]}]},{"tag":"text","content":[". É um objeto vazio que acabamos de criar com nosso código. Sendo uma instância de um objeto que estende "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Number"]}]},{"tag":"text","content":[", podemos usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["MeuNumero"]}]},{"tag":"text","content":[" em qualquer operação matemática do Clojure."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def meu-numero (genclass.MeuNumero.))"]},{"tag":"br","content":null},{"tag":"code-text","content":["meu-numero"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero@19e9bbfe"]},{"tag":"br","content":null},{"tag":"code-text","content":["(+ 42 meu-numero)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; AbstractMethodError java.lang.Number.longValue()J"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero.longValue (:-1)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como objeto vazio, não é nem um pouco útil, mas podemos melhorar. Vamos fazer com que esse número retorne automaticamente seu valor em hexadecimal ou receba um hexadecimal como valor inicial."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos começar criando dois construtores para a classe: uma que recebe um inteiro longo e outro que recebe um texto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos implementar o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["longValue"]}]},{"tag":"text","content":[", que vai ser utilizado na operação de soma, e também o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[", que vai ser utilizado para exibirmos o valor do objeto no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Number"]}]},{"tag":"text","content":[" disponibiliza um método para cada tipo primitivo numérico, mas vamos nos ater em trabalhar apenas com o tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["long"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para informar que vamos trabalhar com dois construtores vamos modificar a declaração do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[", na opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":ns"]}]},{"tag":"text","content":[". Não é necessário informar que vamos implementar os métodos "]},{"tag":"monospaced","content":[{"tag":"text","content":["longValue"]}]},{"tag":"text","content":[" ou "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[", já que eles já foram declarados nas classes-mãe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Number"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", respectivamente."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns genclass.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name         genclass.MeuNumero"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :extends      java.lang.Number"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :constructors {[String] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["                   [Long]   []}"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :init         init"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :state        value))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":constructors"]}]},{"tag":"text","content":[" mapeia os tipos de parâmetros do construtor da nossa classe e os tipos de parâmetros do construtor da classe mãe. Como o construtor de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Number"]}]},{"tag":"text","content":[" não recebe parâmetros, nossos dois construtores vão mapear, respectivamente, "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["Long"]}]},{"tag":"text","content":[" para um vetor vazio."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Sempre que utilizarmos a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":construtors"]}]},{"tag":"text","content":[" devemos também informar a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":init"]}]},{"tag":"text","content":[", que vai informar ao Clojure qual função deve ser utilizada para inicializar o objeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não se preocupe com a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":state"]}]},{"tag":"text","content":[". Já vamos chegar nela."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos implementar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["-init"]}]},{"tag":"text","content":[" para tratarmos os diferentes tipos de dados que podem ser utilizados na inicialização do objeto."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["type"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -init [value]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"O valor informado foi\" (type value) value))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Aqui a nossa função de inicialização apenas exibe o tipo e o valor do parâmetro que foi passado na criação do objeto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(genclass.MeuNumero. 12)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; O valor informado foi java.lang.Long 12"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero@436d3c34"]},{"tag":"br","content":null},{"tag":"code-text","content":["(genclass.MeuNumero. \"12\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; O valor informado foi java.lang.String 12"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero@7bf2fa73"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Funcionou bem com "]},{"tag":"monospaced","content":[{"tag":"text","content":["Long"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[". Se tentarmos passar qualquer outro tipo de dados, receberemos uma mensagem de erro."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(genclass.MeuNumero. true)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; IllegalArgumentException No matching ctor found for class"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero  clojure.lang.Reflector.invokeConstructor"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (Reflector.java:183)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos escrever algum código para tratarmos e armazenarmos nosso número."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -init [value]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (if (= (type value) java.lang.String)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    [[] (Long/parseLong value 16)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    [[] value]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nossa função verifica se o valor recebido na inicialização é do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[" e, se for, converte para "]},{"tag":"monospaced","content":[{"tag":"text","content":["Long"]}]},{"tag":"text","content":[". Caso contrário retorna o próprio valor como "]},{"tag":"monospaced","content":[{"tag":"text","content":["Long"]}]},{"tag":"text","content":[", já que nenhum outro tipo é permitido."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Percebe que os valores estão sendo retornados dentro de um vetor de duas posições. A primeira posição é o valor a ser passado para o construtor da classe mãe. Como o construtor de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Number"]}]},{"tag":"text","content":[" não recebe qualquer parâmetro, basta passarmos um vetor vazio."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já a segunda posição do vetor guarda o valor a ser armazenado em "]},{"tag":"monospaced","content":[{"tag":"text","content":["value"]}]},{"tag":"text","content":[", que declaramos como na opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":state"]}]},{"tag":"text","content":[". Esse campo "]},{"tag":"monospaced","content":[{"tag":"text","content":["value"]}]},{"tag":"text","content":[" é justamente o estado do objeto que estamos criando e não pode ser alterado depois da criação do objeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos ver nosso código funcionando na prática com o que fizemos até agora."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def deci (genclass.MeuNumero. 15))"]},{"tag":"br","content":null},{"tag":"code-text","content":["deci"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero@303034c1"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def hexa (genclass.MeuNumero. \"1f\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["hexa"]},{"tag":"br","content":null},{"tag":"code-text","content":["; genclass.MeuNumero@1ec877d9"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Certo, não deu erro, mas ainda não faz nada de útil. Vamos então implementar "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[", que vai retornar a representação hexadecimal do nosso número."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[" precisa ter o prefixo, que por padrão é "]},{"tag":"monospaced","content":[{"tag":"text","content":["-"]}]},{"tag":"text","content":[", e também uma referência ao próprio objeto, que aqui vamos continuar chamando de "]},{"tag":"monospaced","content":[{"tag":"text","content":["this"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -toString [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (Long/toHexString (.value this)))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como dissemos, ao declarar "]},{"tag":"monospaced","content":[{"tag":"text","content":["value"]}]},{"tag":"text","content":[" na opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":state"]}]},{"tag":"text","content":[", criamos um campo privado com este nome dentro de nosso objeto. Ele contém o valor inteiro longo atribuido na inicialização do objeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos usar o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["toHexString"]}]},{"tag":"text","content":[" da classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Long"]}]},{"tag":"text","content":[" para convertermos o valor numérico em hexadecimal e concluímos o código de "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def deci (genclass.MeuNumero. 15))"]},{"tag":"br","content":null},{"tag":"code-text","content":["deci"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 1f"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def hexa (genclass.MeuNumero. \"1f\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["hexa"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 1f"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Falta darmos suporte a operações matemáticas. A classe abstrata "]},{"tag":"monospaced","content":[{"tag":"text","content":["Number"]}]},{"tag":"text","content":[" define seis métodos para seis tipos numéricos diferentes ("]},{"tag":"italic","content":[{"tag":"text","content":["byte"]}]},{"tag":"text","content":[", "]},{"tag":"italic","content":[{"tag":"text","content":["float"]}]},{"tag":"text","content":[", "]},{"tag":"italic","content":[{"tag":"text","content":["double"]}]},{"tag":"text","content":[", "]},{"tag":"italic","content":[{"tag":"text","content":["short"]}]},{"tag":"text","content":[", "]},{"tag":"italic","content":[{"tag":"text","content":["int"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["long"]}]},{"tag":"text","content":["). Vamos nos ater apenas ao tipo inteiro para não deixar a explicação maior do que deveria ser."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Num objeto do mundo real você não pode deixar nenhum método abstrato sem implementação, correndo o risco de causar um erro durante a execução da sua aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O método que retorna o tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["long"]}]},{"tag":"text","content":[" chama-se "]},{"tag":"monospaced","content":[{"tag":"text","content":["longValue"]}]},{"tag":"text","content":[". Vamos declará-lo da mesma forma que fizemos com "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[", usando o prefixo "]},{"tag":"monospaced","content":[{"tag":"text","content":["-"]}]},{"tag":"text","content":[" e o parâmetro "]},{"tag":"monospaced","content":[{"tag":"text","content":["this"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -longValue [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.value this))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Sem dúvida, um dos códigos mais complexos que já escrevemos até agora."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos testar nosso objeto em uma operação aritmética qualquer:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [val1 (genclass.MeuNumero. \"1ff\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["      val2 (genclass.MeuNumero. \"e00\")]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (+ val1 val2))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 4095"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; 4095 em hexadecimal é fff, o mesmo que 1ff + e00"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E eis o nosso objeto participando de uma soma, tranquilão e feliz."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["E as interfaces?"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Foi dito também que, além de estender uma classe, é possívem implementar interfaces. É possível inclusive mesclar os dois recursos num mesmo objeto, assim como acontece numa classe Java qualquer."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos utilizar o mesmo projeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["genclass"]}]},{"tag":"text","content":[" para demonstrar como implementar a interface "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.lang.IDeref"]}]},{"tag":"text","content":[", que é usada para definir estruturas de dados que retornem valor através dos operadores "]},{"tag":"monospaced","content":[{"tag":"text","content":["@"]}]},{"tag":"text","content":[" ou "]},{"tag":"monospaced","content":[{"tag":"text","content":["deref"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos adicionar a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":implements"]}]},{"tag":"text","content":[" na opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":gen-class"]}]},{"tag":"text","content":[" e, em seguida, informar em uma lista as interfaces que pretendemos implementar."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Lembre-se de informar as interfaces dentro de uma lista. Se você usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["quote"]}]},{"tag":"text","content":[", teremos um erro de compilação. Se usar vetor, não ocorrerá um erro, mas a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":implements"]}]},{"tag":"text","content":[" será ignorada."]},{"tag":"br","content":null}]},{"tag":"todo","content":[{"tag":"text","content":["verificar isso aqui"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Apesar da documentação dizer que qualquer coleção serve, apenas a lista funciona corretamente nessa opção. Testei com as versões "]},{"tag":"monospaced","content":[{"tag":"text","content":["1.5.1"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["1.6.0"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["1.7.0"]}]},{"tag":"text","content":[", mas nada impede que isso volte a funcionar como é dito na documentação em alguma versão futura."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns aot.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :name         aot.MeuNumero"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :extends      java.lang.Number"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :implements   (clojure.lang.IDeref) ; lista sem quote ou '"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :qualquercoisa true"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :constructors {[String] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["                   [Long]   []}"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :init         init"]},{"tag":"br","content":null},{"tag":"code-text","content":["    :state        value))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A declaração permaneceu praticamente a mesma e apenas adicionamos a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":implements"]}]},{"tag":"text","content":[". Aqui o nome do pacote foi alterado para "]},{"tag":"monospaced","content":[{"tag":"text","content":["aot.core"]}]},{"tag":"text","content":[" apenas para deixar claro que estamos usando a compilação "]},{"tag":"italic","content":[{"tag":"text","content":["ahead of time"]}]},{"tag":"text","content":[". Você pode usar aqui o nome que vem entender."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nosso código de "]},{"tag":"monospaced","content":[{"tag":"text","content":["deref"]}]},{"tag":"text","content":[" não faz muito além de exibir o estado atual do nosso objeto, mas dá para termos uma ideia do que é possível fazer."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def n (aot.MeuNumero. 42))"]},{"tag":"br","content":null},{"tag":"code-text","content":["@n"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 42"]},{"tag":"br","content":null},{"tag":"code-text","content":["(deref n)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 42"]},{"tag":"br","content":null},{"tag":"code-text","content":["(+ 15 n)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 57"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Criando objetos anônimos a partir de classes e interfaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Até aqui vimos que podemos criar classes que estendem outras classes ou implementam interfaces. Isso é útil se precisarmos de vários objetos de uma mesma classe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em boa parte das vezes precisamos apenas de uma instância daquela classe ou de um objeto que implemente uma interface, sem que exista a necessidade de criarmos uma classe intermediária para isso."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["proxy"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para criar um objeto a partir de uma classe, concreta ou abstrata, usaremos o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Além de eliminar a necessidade de criarmos uma classe explicitamente, este operador tem ainda a vantagem de não nos obrigar a usar "]},{"tag":"italic","content":[{"tag":"text","content":["AOT"]}]},{"tag":"text","content":[" para que o objeto seja criado. Não há nada de errado em usar "]},{"tag":"italic","content":[{"tag":"text","content":["AOT"]}]},{"tag":"text","content":[", desde que você possa escolher o melhor momento para isso."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por outro lado, "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" não permite que você adicione métodos que não tenham sido declarados na classe mãe ou na interface que você deseja implementar."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em Inglês, "]},{"tag":"italic","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" significa "]},{"tag":"italic","content":[{"tag":"text","content":["despachante"]}]},{"tag":"text","content":[" ou "]},{"tag":"italic","content":[{"tag":"text","content":["procurador"]}]},{"tag":"text","content":[". É um intermediário para o qual você atribui um serviço e ele vai lá fazer para você. Na prática é como se você mesmo tivesse feito."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em computação é qualquer computador, sistema ou coisa que o valha que fica entre as pontas do processo ou da comunicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por exemplo, ao acessar um site pela rede da empresa, seu computador envia uma requisição para um servidor proxy, que é um computador que fica entre a rede da empresa e a Internet e esse servidor envia a requisição para a Internet."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A Internet enxerga o proxy, mas não o seu computador, enquanto seu computador enxerga o proxy, mas não a Internet."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Enquanto isso você, como usuário, acha que está acessando diretamente a Internet, feliz e tranquilão, como se ninguém estivesse lendo as coisas que você acessa."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Internamente o Clojure cria um mapa com as funções que você informa à macro "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" e, por baixo disso, é criado um objeto que executa cada função Clojure de acordo com o método invocado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A macro tem esse nome exatamente por criar uma estrutura que fica no meio do caminho entre esse objeto e o código que você escreveu. Você acha que acessou o objeto diretamente, quando na verdade existe um intermediário no caminho."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos começar com o objeto mais simples possível criando uma instância de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", a classe fundamental do Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O primeiro parâmetro é um vetor contendo a classe e/ou as interfaces que o nosso objeto vai implementar. Caso você misture classes e interfaces, a classe deve ser o primeiro item do vetor."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já o segundo contém os parâmetros a serem passados para o construtor da classe que vai ser utilizado para implementarmos o objeto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def obj (proxy [java.lang.Object] []))"]},{"tag":"br","content":null},{"tag":"code-text","content":["obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Object$ff19274a user.proxy$java.lang.Object$ff19274a@40a72ff3>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Bacana, criamos um objeto do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", o que por si só não serve para muita coisa. Vamos sobrescrever o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[" para vermos algo diferente acontecer."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def obj (proxy [java.lang.Object] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["           (toString [] \"É nóis, Jão.\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Object$ff19274a É nóis, Jão.>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Implementando interfaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora fazer com que o nosso objeto seja executado em uma "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" separada. Para isso, vamos implementar a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Runnable"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def thr (proxy [java.lang.Runnable] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["           (run [] (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["                   (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                   (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["           (toString [] \"É nóis, Jão.\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["thr"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Object$Runnable$c4146801 É nóis, Jão.>"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.start (Thread. thr))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Espero cinco segundos"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; ...volta ao prompt do REPL..."]},{"tag":"br","content":null},{"tag":"code-text","content":["; Executei a thread"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos passar qualquer objeto que implemente a interface "]},{"tag":"monospaced","content":[{"tag":"text","content":["Runnable"]}]},{"tag":"text","content":[" como parâmetro para um objeto do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Thread"]}]},{"tag":"text","content":[", e esse objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["Thread"]}]},{"tag":"text","content":[" vai executar nossa implementação de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Runnable"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E cadê o "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[" que estava ali? Veja, se todo objeto Java é uma instância de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[" ou de uma classe que estende "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", não existe necessidade de informarmos essa classe quando estivermos implementando uma interface ou estendendo qualquer outra classe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Toda função que você cria dentro com "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" pode fazer uso de "]},{"tag":"italic","content":[{"tag":"text","content":["closures"]}]},{"tag":"text","content":[", guardando dados que existiam no contexto em que ela foi criada. Isso nos permite trabalhar com estados dentro do objeto que criamos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" retorna um objeto, podemos usá-lo dentro de um "]},{"tag":"monospaced","content":[{"tag":"text","content":["let"]}]},{"tag":"text","content":[", dentro de uma função ou onde mais você tiver necessidade."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No nosso exemplo, o parâmetro "]},{"tag":"monospaced","content":[{"tag":"text","content":["texto"]}]},{"tag":"text","content":[" vai fazer parte do "]},{"tag":"italic","content":[{"tag":"text","content":["closure"]}]},{"tag":"text","content":[", já que não vai mais existir após o fim da função, mas o objeto vai guardar a referência ao valor."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn meu-deref [texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (proxy [clojure.lang.IDeref java.lang.Runnable] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (run [] (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (toString [] \"É nóis, Jão.\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (deref [] texto)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def obj (meu-deref \"O mundo é bão, Sebastião\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Object$IDeref$Runnable$8011923@5444c89a:"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"O mundo é bão, Sebastião\">"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.toString obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"É nóis, Jão.\""]},{"tag":"br","content":null},{"tag":"code-text","content":["@obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"O mundo é bão, Sebastião\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(.start (Thread. obj))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Espero cinco segundos"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Executei a thread"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Acessando métodos da classe mãe"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Todo objeto Java tem uma propriedade chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[", que é utilizada na comparação entre dois objetos. Se o "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" de dois objetos for diferente, é certeza de que estamos lidando com objetos diferentes."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso o "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" seja igual, podemos partir para verificações mais lentas para termos certeza de que estamos falando de objetos com valores iguais. Comparar números inteiros é bem mais rápido e eficiente do que comparar textos ou outros valores mais complexos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" também é utilizado como chave em um "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[". Quando você utiliza objetos mutáveis, o "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" pode ser modificado durante a vida do objeto, e é por isso que você não deve nunca utilizar objetos mutáveis dentro de um "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[". Se você perder a chave de um item do "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" é bem possível que você não encontre mais o objeto que você precisa."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos modificar o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" para exibir um número entre "]},{"tag":"italic","content":[{"tag":"text","content":["0"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["9"]}]},{"tag":"text","content":[". Obviamente isso acaba com qualquer utilidade do "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[", mas vai nos ajudar a demonstrar uma chamada a um método de uma classe mãe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos aproveitar o código do nosso objeto atual."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn meu-deref [texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (proxy [clojure.lang.IDeref java.lang.Runnable] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (run [] (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (toString [] \"É nóis, Jão.\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (deref [] texto)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E agora vamos alterar "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" para retornar sempre o mesmo valor. Isso não tem utilidade prática nenhuma, mas é um começo para testarmos se a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" está sendo utilizada no nosso objeto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["    (hashCode [] 10)))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E agora vamos verificar os valores."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def obj (meu-deref \"Wazaaaap\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["@obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Wazaaaap\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 10"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["proxy-super"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos deixar o cálculo do "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" para a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", que é a mãe. Dessa forma não precisaremos nos preocupar em utilizar algum algoritmo para isso. Para chamar o método correspondente da classe mãe vamos usar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy-super"]}]},{"tag":"text","content":[", usando o nome do método como argumento."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn meu-deref [texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (proxy [clojure.lang.IDeref java.lang.Runnable] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (run [] (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (toString [] \"É nóis, Jão.\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (deref [] texto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (hashCode [] (proxy-super hashCode))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def obj (meu-deref \"hashCode padrão\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Object$IDeref$Runnable$8011923@79ff0a90: \"hashCode padrão\">"]},{"tag":"br","content":null},{"tag":"code-text","content":["@obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"hashCode padrão\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 2046757520"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora o objeto está retornando o "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" padrão."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A título de curiosidade, o nome do nosso objeto internamente é "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object$IDeref$Runnable$8011923@79ff0a90"]}]},{"tag":"text","content":[". O valor do "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[", que em decimal é "]},{"tag":"italic","content":[{"tag":"text","content":["2046757520"]}]},{"tag":"text","content":[", convertido para hexadecimal é justamente o valor "]},{"tag":"italic","content":[{"tag":"text","content":["79ff0a90"]}]},{"tag":"text","content":[" exibido após a arroba do nome do objeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos finalmente alterar a função que nos retorna "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" usando a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["mod"]}]},{"tag":"text","content":[" para termos o resto de divisão por "]},{"tag":"italic","content":[{"tag":"text","content":["10"]}]},{"tag":"text","content":[", para termos apenas um dígito."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn meu-deref [texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (proxy [clojure.lang.IDeref java.lang.Runnable] []"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (run [] (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (toString [] \"É nóis, Jão.\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (deref [] texto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (hashCode [] (mod (proxy-super hashCode) 10))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def obj (meu-deref \"hashCode modificado\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["@obj"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"hashCode modificado\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 2"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos gerar mais alguns objetos para ver os "]},{"tag":"italic","content":[{"tag":"text","content":["hashCodes"]}]},{"tag":"text","content":[" que são gerados."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode (meu-deref \"Mais um\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 9"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode (meu-deref \"E mais outro\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 1"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode (meu-deref \"E ainda outro\"))="]},{"tag":"br","content":null},{"tag":"code-text","content":["; 3"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Entendendo proxy por dentro"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Falamos no início da explicação que o objeto "]},{"tag":"italic","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[", na verdade, executa código que está num "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" que armazena as funções Clojures que foram passadas como parâmetro ao utilizarmos o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["proxy-mappings"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos acessar esse "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" através da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy-mappings"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(proxy-mappings obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; {\"hashCode\" #<user$meu_deref$fn__769"]},{"tag":"br","content":null},{"tag":"code-text","content":[";               user$meu_deref$fn__769@5181e7c3>,"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"deref\" #<user$meu_deref$fn__773"]},{"tag":"br","content":null},{"tag":"code-text","content":[";           user$meu_deref$fn__773@67808dd0>,"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"toString\" #<user$meu_deref$fn__775"]},{"tag":"br","content":null},{"tag":"code-text","content":[";              user$meu_deref$fn__775@15caeeb7>,"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"run\" #<user$meu_deref$fn__777 user$meu_deref$fn__777@7b112e9a>}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Internamente, o objeto criado por "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" tem uma propriedade chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["_getClojureFnMappings"]}]},{"tag":"text","content":[", que é acessada pelo método que invocarmos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se invocarmos o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["toString"]}]},{"tag":"text","content":[", por exemplo, internamente será executado um código Java similar a isso:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["Object fn __getClojureFnMappings.get(\"toString\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["public String toString() {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  if(fn == null) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    throw new UnsupportedOperationException();"]},{"tag":"br","content":null},{"tag":"code-text","content":["  } else {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    ((IFn)fn).invoke(this);"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que a função recebe uma referência ao objeto, exatamente como acontece quando usamos "]},{"tag":"monospaced","content":[{"tag":"text","content":[":gen-class"]}]},{"tag":"text","content":[", mas ao contrário de "]},{"tag":"monospaced","content":[{"tag":"text","content":[":gen-class"]}]},{"tag":"text","content":[", não precisamos declarar essa referência ao objeto. O próprio Clojure se encarrega de inserí-la ao gerar o código do objeto e das funções Clojure que serão invocadas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esse código é genérico e simples o bastante para que possa ser gerado rapidamente e para quantos métodos forem necessários."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos executar qualquer uma das funções utilizadas pelo objeto "]},{"tag":"italic","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" da mesma forma que o objeto faz internamente."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def m (proxy-mappings obj))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(m \"hashCode\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<user$meu_deref$fn__769 user$meu_deref$fn__769@5181e7c3>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos executar a função retornada pelo "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[", passando o objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["obj"]}]},{"tag":"text","content":[" como parãmetro. Note que o resultado é exatamente o mesmo de chamarmos diretamente o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" do objeto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["((m \"hashCode\") obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 2"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 2"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já que temos acesso ao "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" que contém os nomes dos métodos do objeto e suas respectivas funções, não seria bom também se pudessemos modificar esse mapa em tempo de execução?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Pois saiba que podemos, o que torna um objeto Java criado por dentro do Clojure ainda mais flexível que um objeto Java criado por dentro do Java."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["update-proxy"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos modificar nosso método "]},{"tag":"monospaced","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" para que ele retorne o valor gerado pela classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", desfazendo o nosso experimento com um "]},{"tag":"italic","content":[{"tag":"text","content":["hashCode"]}]},{"tag":"text","content":[" que só retorna um dígito. Para isso vamos usar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["update-proxy"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(update-proxy obj {\"hashCode\" (fn [this] (proxy-super hashCode))})"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.hashCode obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 31195642"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["update-proxy"]}]},{"tag":"text","content":[" retorna uma cópia de "]},{"tag":"monospaced","content":[{"tag":"text","content":["obj"]}]},{"tag":"text","content":[" e causa efeito colateral, modificando o "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" que está dentro de "]},{"tag":"monospaced","content":[{"tag":"text","content":["obj"]}]},{"tag":"text","content":[". Lembre-se disso ao compartilhar um objeto gerado por "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[" entre várias "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Usando reify"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["reify"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Existe uma outra macro, chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[", que retorna um objeto a partir de uma interface Java. A palavra "]},{"tag":"italic","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" significa "]},{"tag":"italic","content":[{"tag":"text","content":["tornar algo real"]}]},{"tag":"text","content":[" ou, no contexto do Clojure, pegar uma interface e transformar em um objeto concreto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O uso de "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" tem certas vantagens sobre o uso de "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[", mas também ter limitações."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A macro "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" cria um objeto sem o mapa no meio do caminho, e as funções que você declara são os próprios métodos do objeto. Isso faz com que a criação e o uso do objeto seja mais rápido e ocupe menos memória."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por outro lado, você só pode implementar interfaces e protocolos e também não pode substituir um método por outro em tempo de execução."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Assim como aconteceu com "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[", você não pode definir métodos que não tenham sido declarados nas interfaces que você estiver implementando."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se isso não for problema para você, use "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" e seja feliz."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos escrever com "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" um código equivalente ao que escrevemos com "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[", implementando um objeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["Runnable"]}]},{"tag":"text","content":[" que aguarde cinco segundos em uma "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" separada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro informamos a interface que estamos implementando, sem a necessidade de um vetor."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [obj (reify java.lang.Runnable"]},{"tag":"br","content":null},{"tag":"code-text","content":[";]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos implementar o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["run"]}]},{"tag":"text","content":[". Ao contrário de "]},{"tag":"monospaced","content":[{"tag":"text","content":["proxy"]}]},{"tag":"text","content":[", aqui precisamos declarar um parâmetro que vai receber uma referência ao objeto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["            (run [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (println \"Executei a thread\")))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E agora criamos uma nova "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" e a iniciamos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["      thread (Thread. obj)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.start thread))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Espero cinco segundos"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; ...volta para o REPL..."]},{"tag":"br","content":null},{"tag":"code-text","content":["; Executei a thread"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se precisarmos implementar mais de uma interface, basta declararmos a próxima após terminarmos de implementar os métodos da interface anterior, e assim por diante."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos implementar agora a interface "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.lang.IDeref"]}]},{"tag":"text","content":[" no nosso objeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vou incluir aqui o código completo do exemplo anterior para que você tenha uma boa noção de como o código fica."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [obj (reify java.lang.Runnable"]},{"tag":"br","content":null},{"tag":"code-text","content":["      ;; método de Runnable"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (run [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["            clojure.lang.IDeref"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (deref [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["              \"Aqui rolou um deref\"))]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println @obj))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Aqui rolou um deref"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por padrão, "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" já implementa "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.lang.IObj"]}]},{"tag":"text","content":[", o que nos dá de brinde suporte a metadados."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [obj ^{:texto \"Este eh um objeto criado dinamicamente"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    com reify\"}"]},{"tag":"br","content":null},{"tag":"code-text","content":["         (reify java.lang.Runnable"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (run [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (println \"Espero cinco segundos\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (Thread/sleep 5000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["              (println \"Executei a thread\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["            clojure.lang.IDeref"]},{"tag":"br","content":null},{"tag":"code-text","content":["            (deref [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["              \"Aqui rolou um deref\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["      vdoc (var doc)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println @obj)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println (meta obj)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Aqui rolou um deref"]},{"tag":"br","content":null},{"tag":"code-text","content":["; {:texto Este eh um objeto criado dinamicamente com reify,"]},{"tag":"br","content":null},{"tag":"code-text","content":[";  :column 11, :line 1}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora você sabe criar praticamente qualquer objeto que precisar dentro do Clojure."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Usando Java e Clojure no mesmo projeto"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas, e quando você descobre que criar o objeto por dentro do Clojure não é o bastante, seja por precisar extrair o máximo de velocidade, seja porque você já tem um código pronto em Java?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Com a ajuda do nosso amigo "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[" podemos usar Clojure e Java num mesmo projeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Com alguns plugins a mais você pode inclusive misturar Clojure, Java, Frege (um dialeto Haskell), Groovy e Scala num mesmo projeto. Eu realmente não sei porque alguém iria querer fazer essa mistureba, mas é possível de qualquer maneira."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um projeto chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["integracao"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["lein new app integracao"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Generating a project called integracao based on the 'app' template."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ao criarmos uma aplicação usando o "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[", será criada a seguinte estrutura de diretórios:"]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["+-- doc"]},{"tag":"br","content":null},{"tag":"code-text","content":["|"]},{"tag":"br","content":null},{"tag":"code-text","content":["+-- resources"]},{"tag":"br","content":null},{"tag":"code-text","content":["|"]},{"tag":"br","content":null},{"tag":"code-text","content":["+-- src"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   |"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   +-- integracao"]},{"tag":"br","content":null},{"tag":"code-text","content":["|"]},{"tag":"br","content":null},{"tag":"code-text","content":["+-- test"]},{"tag":"br","content":null},{"tag":"code-text","content":["    |"]},{"tag":"br","content":null},{"tag":"code-text","content":["    +-- integracao"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por padrão, nosso código Clojure vai ficar dentro do diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["/src"]}]},{"tag":"text","content":[". Vamos modificar essa estrutura para podermos abrigar os fontes Java e Clojure de forma organizada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Eu costumo usar a estrutura a seguir, mas fique a vontade para usar a estrutura que for mais conveniente para você ou para sua equipe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que dentro de "]},{"tag":"monospaced","content":[{"tag":"text","content":["/src"]}]},{"tag":"text","content":[" eu crio um diretório para o Java e outro para o Clojure. Se eu fosse misturar Groovy, criaria um diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["groovy"]}]},{"tag":"text","content":[" dentro de "]},{"tag":"monospaced","content":[{"tag":"text","content":["/src"]}]},{"tag":"text","content":[" e assim por diante."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["+-- doc"]},{"tag":"br","content":null},{"tag":"code-text","content":["|"]},{"tag":"br","content":null},{"tag":"code-text","content":["+-- resources"]},{"tag":"br","content":null},{"tag":"code-text","content":["|"]},{"tag":"br","content":null},{"tag":"code-text","content":["+-- src"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   |"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   +-- clojure"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   |   |"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   |   +-- integracao"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   |"]},{"tag":"br","content":null},{"tag":"code-text","content":["|   +-- java"]},{"tag":"br","content":null},{"tag":"code-text","content":["|"]},{"tag":"br","content":null},{"tag":"code-text","content":["+-- test"]},{"tag":"br","content":null},{"tag":"code-text","content":["    |"]},{"tag":"br","content":null},{"tag":"code-text","content":["    +-- integracao"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que o diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["integracao"]}]},{"tag":"text","content":[", por fazer parte da estrutura do código Clojure, foi movido para o local devido."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note também que não mexemos no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["test"]}]},{"tag":"text","content":[" por não ser importante para o que estamos fazendo agora. Mais para frente teremos um capítulo todo só para testes."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora que modificamos a estrutura de diretórios teremos problemas para compilar nossa aplicação. Claro, o "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[" não sabe para foi o nosso código."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["lein run"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Can't find 'integracao.core' as .class or .clj for lein run: please"]},{"tag":"br","content":null},{"tag":"code-text","content":["> check the spelling."]},{"tag":"br","content":null},{"tag":"code-text","content":["> Exception in thread \"main\" java.io.FileNotFoundException: Could not"]},{"tag":"br","content":null},{"tag":"code-text","content":["> locate integracao/core__init.class or integracao/core.clj on"]},{"tag":"br","content":null},{"tag":"code-text","content":["> classpath: , compiling:"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos editar o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["project.clj"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defproject integracao \"0.1.0-SNAPSHOT\""]},{"tag":"br","content":null},{"tag":"code-text","content":["  ; licenças, descrição, URL"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :dependencies [[org.clojure/clojure \"1.7.0\"]]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :main integracao.core"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos adicionar as opções "]},{"tag":"monospaced","content":[{"tag":"text","content":["source-paths"]}]},{"tag":"text","content":[", com um vetor contendo os diretórios onde o código fonte escrito em Clojure pode ser encontrado; e "]},{"tag":"monospaced","content":[{"tag":"text","content":["java-source-paths"]}]},{"tag":"text","content":[", contendo um vetor com os diretórios onde o código fonte escrito em Java puro pode ser encontrado."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["  :source-paths [\"src/clojure\"]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  :java-source-paths [\"src/java\"])"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora podemos executar o nosso projeto para ver a mensagem padrão da aplicação."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["lein run"]},{"tag":"br","content":null},{"tag":"code-text","content":["> Hello, World!"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos escrever um código Java bem simples dentro do diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/java"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nossa classe Java vai ficar dentro de um pacote "]},{"tag":"monospaced","content":[{"tag":"text","content":["meu.codigo.java"]}]},{"tag":"text","content":[", o que significa que devemos escrever nosso arquivo Java dentro do diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["meu/codigo/java"]}]},{"tag":"text","content":[", que por sua vez fica dentro de "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/java"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["package meu.codigo.java;"]},{"tag":"br","content":null},{"tag":"code-text","content":["public class MinhaClasse {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public static final String UMA_CONSTANTE = \"Uma constante\";"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public String umMembro = \"Esse aqui pode ser alterado\";"]},{"tag":"br","content":null},{"tag":"code-text","content":["  private String texto = \"Um texto qualquer\";"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public static String metodoEstatico() {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    return \"Um método estático de classe\";"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public String metodoDeClasse() {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    return \"Um método de classe\";"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public void setTexto(String texto) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    this.texto = texto;"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public String getTexto() {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    return texto;"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Misturei métodos e membros publicos, privados, estáticos e de objeto para mostrar como cada um se comporta dentro do Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos voltar ao arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/clojure/core.clj"]}]},{"tag":"text","content":[" e importar essa classe que acabamos de criar."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns integracao.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:import [meu.codigo.java MinhaClasse])"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:gen-class))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que há um espaço entre "]},{"tag":"monospaced","content":[{"tag":"text","content":["java"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["MinhaClasse"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos abrir o REPL para podermos brincar a vontade para o objeto que vamos criar."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def meu-objeto (MinhaClasse.))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos utilizar os membros estáticos da classe que criamos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["MinhaClasse/UMA_CONSTANTE"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Uma constante\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(MinhaClasse/metodoEstatico)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Um método estático de classe"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Enquanto no Java é possível acessar membros estáticos através do objeto, mesmo sendo uma má prática, no Clojure isso não é possível, já que o compilador vai achar que o nome do objeto é um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["meu-objeto/UMA_CONSTANTE"]},{"tag":"br","content":null},{"tag":"code-text","content":["; java.lang.RuntimeException: No such namespace: meu-objeto"]},{"tag":"br","content":null},{"tag":"code-text","content":["(meu-objeto/metodoEstatico)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; java.lang.RuntimeException: No such namespace: meu-objeto"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos acessar os membros de objeto, ou de instância, da forma como já conhecemos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(.umMembro meu-objeto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Esse aqui pode ser alterado\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(.metodoDeInstancia meu-objeto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Um método de instancia\"\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["set!"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos alterar campos de um objeto Java através da forma especial "]},{"tag":"monospaced","content":[{"tag":"text","content":["set!"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(set! (.umMembro meu-objeto) \"Novo valor\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Novo valor\""]},{"tag":"br","content":null},{"tag":"code-text","content":["integracao.core=> (.umMembro meu-objeto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Novo valor\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que "]},{"tag":"monospaced","content":[{"tag":"text","content":["set!"]}]},{"tag":"text","content":[" causa um efeito colateral ao modificar o objeto que criamos. Pelo fato do objeto ser mutável, tome cuidado ao compartilhá-lo entre diferentes "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":[" da aplicação, já que todos os problemas que temos com concorrência em Java vão acontecer também com nosso objeto no Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Veremos concorrência mais para frente e abordaremos esses tais problemas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por fim, podemos executar também "]},{"tag":"italic","content":[{"tag":"text","content":["getters"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["setters"]}]},{"tag":"text","content":[" do objeto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(.getTexto meu-objeto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Um texto qualquer\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(.setTexto meu-objeto \"Um novo texto qualquer\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; nil"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.getTexto meu-objeto)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Um novo texto qualquer\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E você pode manipular o objeto normalmente, sem novidade nenhuma até aqui."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Chamando Clojure dentro do Java"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Pode acontecer o contrário, sendo necessário invocar código Clojure de dentro do Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos aproveitar criar um novo projeto utilizando uma ferramenta chamada "]},{"tag":"italic","content":[{"tag":"text","content":["Maven"]}]},{"tag":"text","content":[", que é uma das mais utilizadas para gerenciar tarefas e dependências em projetos Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Você pode encontrar o "]},{"tag":"italic","content":[{"tag":"text","content":["Maven"]}]},{"tag":"text","content":[" no endereço:"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["https://maven.apache.org/"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Após seguir as instruções do site para instalar e configurar, vamos criar um projeto chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["meu-java"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso, vamos executar o comando a seguir numa mesma linha. Vou quebrar em linhas diferentes para deixar mais fácil de ler, mas ele deve ser digitado em apenas uma linha."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["mvn archetype:generate"]},{"tag":"br","content":null},{"tag":"code-text","content":["    -DgroupId=capitulo08"]},{"tag":"br","content":null},{"tag":"code-text","content":["    -DartifactId=meu-java"]},{"tag":"br","content":null},{"tag":"code-text","content":["    -DinteractiveMode=false"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Com isso será criado um diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["meu-java"]}]},{"tag":"text","content":[", com a estrutura padrão de diretórios do "]},{"tag":"italic","content":[{"tag":"text","content":["Maven"]}]},{"tag":"text","content":[" e um arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["pom.xml"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você preferir, pode poupar a trabalheira que é configurar um projeto "]},{"tag":"italic","content":[{"tag":"text","content":["Maven"]}]},{"tag":"text","content":[", com todas as dependências e características, pode pegar o projeto pronto no repositório do livro, no diretório do capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-integracao-java"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O que nos interessa é a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo08.meujava.Main"]}]},{"tag":"text","content":[", que fica no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/main/java"]}]},{"tag":"text","content":[". É lá que vamos demonstrar como fazer a integração com Java."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.java.api.Clojure"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.lang.IFn"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro vamos importar duas classes: "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.java.api.Clojure"]}]},{"tag":"text","content":[", que nos fornece uma interface para invocarmos métodos e operações do Clojure através do Java; e "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.lang.IFn"]}]},{"tag":"text","content":[", que é a interface que toda função Clojure implementa."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["package capitulo08.meujava;"]},{"tag":"br","content":null},{"tag":"code-text","content":["import clojure.java.api.Clojure;"]},{"tag":"br","content":null},{"tag":"code-text","content":["import clojure.lang.IFn;"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E vamos usar o próprio método "]},{"tag":"monospaced","content":[{"tag":"text","content":["main"]}]},{"tag":"text","content":[" para brincarmos com as funções do Clojure."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["public class Main {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  public static void main (String ... args) {"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos atribuir a função Clojure "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" a uma variável do Java que vamos chamar de "]},{"tag":"monospaced","content":[{"tag":"text","content":["soma"]}]},{"tag":"text","content":[" e usá-la para efetuar uma operação simples."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos também guardar uma referência à função "]},{"tag":"monospaced","content":[{"tag":"text","content":["println"]}]},{"tag":"text","content":[" para podermos exibir o resultado."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn soma = Clojure.var(\"clojure.core\", \"+\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn println = Clojure.var(\"clojure.core\", \"println\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke("]},{"tag":"br","content":null},{"tag":"code-text","content":["    \"A soma de 3 e 2 é: \","]},{"tag":"br","content":null},{"tag":"code-text","content":["    soma.invoke(3, 2));"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E fechamos as chaves do código."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["//"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos executar no terminal."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["mvn clean install"]},{"tag":"br","content":null},{"tag":"code-text","content":["java -jar target/meu-java-0.1.0.jar"]},{"tag":"br","content":null},{"tag":"code-text","content":["> A soma de 3 e 2 é:  5"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Acabamos de executar a soma entre dois números usando funções Java. Escreva os códigos Java a seguir dentro desse método "]},{"tag":"monospaced","content":[{"tag":"text","content":["main"]}]},{"tag":"text","content":[" e execute os comandos "]},{"tag":"monospaced","content":[{"tag":"text","content":["mvn"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["java -jar"]}]},{"tag":"text","content":[" da maneira que já vimos para ver o código sendo executado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora pegar uma lista de dez elementos, somar um a todos os elementos e depois calcular a soma de todos os itens."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em Clojure o nosso código ficaria assim. Pode testar no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" para conferir:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(reduce + (map inc (range 1 11)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 65"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos precisar de cinco funções para executar esse código: "]},{"tag":"monospaced","content":[{"tag":"text","content":["reduce"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["map"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["inc"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["range"]}]},{"tag":"text","content":[". A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" já foi atribuída à variável "]},{"tag":"monospaced","content":[{"tag":"text","content":["soma"]}]},{"tag":"text","content":[", então vamos nos preocupar apenas com as outras."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn reduce = Clojure.var(\"clojure.core\", \"reduce\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn map    = Clojure.var(\"clojure.core\", \"map\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn inc    = Clojure.var(\"clojure.core\", \"inc\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn range  = Clojure.var(\"clojure.core\", \"range\");"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A expressão mais interna da nossa expressão é "]},{"tag":"monospaced","content":[{"tag":"text","content":["(range 1 11)"]}]},{"tag":"text","content":[". Vamos atribuir o resultado à variável "]},{"tag":"monospaced","content":[{"tag":"text","content":["lista1"]}]},{"tag":"text","content":[" e mandar imprimir o resultado."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["range"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  Object lista1 = range.invoke(1, 11);"]},{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke(lista1);"]},{"tag":"br","content":null},{"tag":"code-text","content":["// (1 2 3 4 5 6 7 8 9 10)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Olha que bonito uma lista do Clojure sendo impressa dentro do Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora aplicar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["inc"]}]},{"tag":"text","content":[" a todos os itens de "]},{"tag":"monospaced","content":[{"tag":"text","content":["lista1"]}]},{"tag":"text","content":[" e atribuir o resultado."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["map"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["inc"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["  Object lista2 = map.invoke(inc, lista1);"]},{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke(lista2);"]},{"tag":"br","content":null},{"tag":"code-text","content":["// (2 3 4 5 6 7 8 9 10 11)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos aplicar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["soma"]}]},{"tag":"text","content":[" na "]},{"tag":"monospaced","content":[{"tag":"text","content":["lista2"]}]},{"tag":"text","content":[" para termos o somatório de todos os itens da lista."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["reduce"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["  Object resultado = reduce.invoke(soma, lista2);"]},{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke(resultado);"]},{"tag":"br","content":null},{"tag":"code-text","content":["// 65"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E eis o nosso resultado "]},{"tag":"italic","content":[{"tag":"text","content":["65"]}]},{"tag":"text","content":[", o mesmo que obtivemos no código Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Então você vai se perguntar qual a utilidade de usar Clojure dentro do Java para efetuar operações que você poderia muito bem resolver com um "]},{"tag":"monospaced","content":[{"tag":"text","content":["for"]}]},{"tag":"text","content":[" e o operador de adição do próprio Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nenhuma, mas você pode aproveitar as estruturas de dados persistentes na sua aplicação para obter as vantagens da imutabilidade e do aproveitamento de memória, tornando mais fácil a criação de aplicações concorrentes com Java puro."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["atom"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por exemplo, podemos utilizar um "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" para armazenar informações que são lidar e talvez modificadas em um ambiente com várias "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn atom  = Clojure.var(\"clojure.core\", \"atom\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn swap  = Clojure.var(\"clojure.core\", \"swap!\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn deref = Clojure.var(\"clojure.core\", \"deref\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final Object contador = atom.invoke(0);"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Um "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" é uma estrutura do Clojure que permite que a modificação do valor seja feitas de forma atômica e "]},{"tag":"italic","content":[{"tag":"text","content":["thread-safe"]}]},{"tag":"text","content":[", ou seja, só grava se tudo estiver certinho, mesmo que várias "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":[" diferentes tentarem gravar ao mesmo tempo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Criamos um "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" com valor inicial zero, mas poderíamos ter usado qualquer outro valor, inclusive qualquer estrutura de dados, vazia ou não."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["deref"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para lermos o conteúdo de um "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" precisamos utilizar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["deref"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke(\"O valor de contador é:\", deref.invoke(contador));"]},{"tag":"br","content":null},{"tag":"code-text","content":["// O valor de contador é: 0"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["swap!"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para modificarmos o valor de um "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[", usamos a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["swap!"]}]},{"tag":"text","content":[", passando como argumentos o próprio "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" e a função que vai modificar seu valor."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  swap.invoke(contador, inc);"]},{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke(\"O valor de contador agora é:\","]},{"tag":"br","content":null},{"tag":"code-text","content":["                 deref.invoke(contador));"]},{"tag":"br","content":null},{"tag":"code-text","content":["// O valor de contador agora é: 1"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora criar uma "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" que modifique o valor do "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[", iniciar sua execução e, em seguida, fora dessa nova "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" vamos incrementar novamente o valor do "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[". Não há qualquer garantia a respeito da ordem em que isso ocorre, e esse é um dos principais problemas na programação concorrente. Veremos isso no próximo capítulo."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  (new Thread () {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    public void run() {"]},{"tag":"br","content":null},{"tag":"code-text","content":["      swap.invoke(contador, inc);"]},{"tag":"br","content":null},{"tag":"code-text","content":["      println.invoke(\"Dentro da thread:\", deref.invoke(contador));"]},{"tag":"br","content":null},{"tag":"code-text","content":["    };"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }).start();"]},{"tag":"br","content":null},{"tag":"code-text","content":["  println.invoke(\"E finalmente o contador agora é:\","]},{"tag":"br","content":null},{"tag":"code-text","content":["                 deref.invoke(contador));"]},{"tag":"br","content":null},{"tag":"code-text","content":["// E finalmente o contador agora é: 1"]},{"tag":"br","content":null},{"tag":"code-text","content":["// Dentro da thread: 2"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que o código da "]},{"tag":"italic","content":[{"tag":"text","content":["thread"]}]},{"tag":"text","content":[" foi executado após o código fora dela, mesmo tendo sido declarado antes. Como eu disse, não existe como prever a ordem de execução do código ao utilizarmos várias "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":[", mas com "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" podemos ao menos garantir que o valor não vai ser corrompido ou modificado incorretamente."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["classe interna"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que criamos uma classe interna e anônima ao declaramos um novo objeto do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Thread"]}]},{"tag":"text","content":[". Como essa classe interna utiliza membros da classe externa "]},{"tag":"monospaced","content":[{"tag":"text","content":["Main"]}]},{"tag":"text","content":[", emulando "]},{"tag":"italic","content":[{"tag":"text","content":["closures"]}]},{"tag":"text","content":[", esses membros obrigatoriamente precisam ser declarados como "]},{"tag":"monospaced","content":[{"tag":"text","content":["final"]}]},{"tag":"text","content":[", para garantir que elas sejam inicializadas apenas uma vez e suas referências na memória não sejam alteradas"]},{"tag":"ref","content":[{"tag":"text","content":["jvm8-spec"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma boa prática, sendo inclusive o que o próprio Clojure faz, é declarar todos os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" que serão usados no código Java como membros estáticos e finais da classe. Dessa forma você terá a referência atribuída durante a carga da classe pela "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[", uma única vez durante toda a existência da sua aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A sua lição de casa agora vai ser modificar o código usando essa boa prática."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Require"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas ainda não acabou."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Todas os operadores declarados no "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" estão disponíveis automaticamente. Operadores de quaisquer outros "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" devem ser requeridos, como se fosse um código Clojure comum."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["require"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.pprint"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos utilizar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":[" para podermos utilizar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["pprintln"]}]},{"tag":"text","content":[", que está no "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.pprint"]}]},{"tag":"text","content":[" e assim vermos dados formatados na tela."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def livro {:nome \"Plínio\" :sobrenome \"Balduino\" :titulo \"Clojure\""]},{"tag":"br","content":null},{"tag":"code-text","content":["  :editora \"Casa do Código\"})"]},{"tag":"br","content":null},{"tag":"code-text","content":["(clojure.pprintln/pprintln livro)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; {:nome \"Plínio\","]},{"tag":"br","content":null},{"tag":"code-text","content":["   :editora \"Casa do Código\","]},{"tag":"br","content":null},{"tag":"code-text","content":["   :titulo \"Clojure\","]},{"tag":"br","content":null},{"tag":"code-text","content":["   :sobrenome \"Balduino\"}"]},{"tag":"br","content":null},{"tag":"code-text","content":["(println livro)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; {:nome Plínio, :editora Casa do Cídigo, :titulo Clojure,"]},{"tag":"br","content":null},{"tag":"code-text","content":["; :sobrenome Balduino}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos primeiro referenciar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":[" e mais alguns que vão se mostrar úteis no decorrer do exemplo. Não vou declarar novamente as funções que já usamos porque, bem, já declaramos e usamos."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn require = Clojure.var(\"clojure.core\", \"require\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn symbol  = Clojure.var(\"clojure.core\", \"symbol\");"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos carregar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.pprint"]}]},{"tag":"text","content":[" usando "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":[" e referenciar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["pprint"]}]},{"tag":"text","content":[" que lá está."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  require.invoke(symbol.invoke(\"clojure.pprint\"));"]},{"tag":"br","content":null},{"tag":"code-text","content":["  final IFn pprint  = Clojure.var(\"clojure.pprint\", \"pprint\");"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Clojure.read"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora um macete que pode ser perigoso. Podemos declarar um "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" utilizando a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["hash-map"]}]},{"tag":"text","content":[" ou podemos passar código Clojure para o compilador em formato texto através da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["Clojure.read"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Tome cuidado ao executar diretamente valores vindos do usuário ou de fontes externas, já que isso pode se tornar uma grave falha de segurança."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Com isso em mente, vamos exibir o "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" com a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["pprint"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  Object livro = Clojure.read(\"{:nome \\\"Plínio\\\" :sobrenome \" +"]},{"tag":"br","content":null},{"tag":"code-text","content":["    \"\\\"Balduino\\\" :titulo \\\"Clojure\\\" :editora \\\"Casa do Código\\\"}\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["  pprint.invoke(livro);"]},{"tag":"br","content":null},{"tag":"code-text","content":["// {:nome \"Plínio\","]},{"tag":"br","content":null},{"tag":"code-text","content":["//  :sobrenome \"Balduino\","]},{"tag":"br","content":null},{"tag":"code-text","content":["//  :titulo \"Clojure\","]},{"tag":"br","content":null},{"tag":"code-text","content":["//  :editora \"Casa do Código\"}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Você pode executar qualquer código Clojure que precisar dessa forma. Adicione a biblioteca contendo seu código como dependência do projeto Java e aproveite todas as ferramentas que a linguagem oferece para lidar com estruturas de dados persistentes, concorrência e o que mais você achar necessário."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Otimizando com type hints"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por padrão você não informa os tipos dos dados ao Clojure. Internamente o dado vai ser tratado como "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", que é a classe base de qualquer objeto Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Qualquer método ou propriedade que você invocar desse objeto será localizado e chamado através de "]},{"tag":"italic","content":[{"tag":"text","content":["reflection"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Exemplificando, esse código Clojure:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case [text]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase text))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(upper-case \"umba umba umba ê\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"UMBA UMBA UMBA Ê\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vai ser transformado em algo equivalente a isso:"]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["public Object invoke(Object par01) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  return (Object)(par01"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    .getClass()"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    .getDeclaredMethod(\"toUpperCase\", null)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    .invoke(par01));"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null},{"tag":"code-text","content":["(new user$upper_case()).invoke(\"umba umba umba ê\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["// \"UMBA UMBA UMBA Ê\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Eu disse "]},{"tag":"italic","content":[{"tag":"text","content":["equivalente"]}]},{"tag":"text","content":[" porque o seu código Clojure vai ser compilado diretamente para "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" ao invés de ser convertido primeiro para código Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como podemos notar, além de termos que invocar três métodos para fazer a chamada de um e termos que fazer "]},{"tag":"italic","content":[{"tag":"text","content":["typecasting"]}]},{"tag":"text","content":[" - ou "]},{"tag":"italic","content":[{"tag":"text","content":["coerção de tipos"]}]},{"tag":"text","content":[", se preferir - para que tudo seja tratado como "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", o próprio processo de "]},{"tag":"italic","content":[{"tag":"text","content":["reflection"]}]},{"tag":"text","content":[" é lento por si só."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note como informamos o nome do método "]},{"tag":"monospaced","content":[{"tag":"text","content":["toUpperCase"]}]},{"tag":"text","content":[" como um texto. Com isso o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["getDeclaredMethod"]}]},{"tag":"text","content":[" vai pesquisar uma tabela interna daquela objeto comparando cada nome de método até encontrar o que procuramos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para ajudar, como o Clojure não tem a mais remota ideia do que queremos transformar em letras maiúsculas, a função aceita qualquer coisa."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(upper-case 3.14159)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; IllegalArgumentException No matching field found: toUpperCase for"]},{"tag":"br","content":null},{"tag":"code-text","content":["; class java.lang.Double"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"italic","content":[{"tag":"text","content":["Ah, então o compilador do Clojure é mal feito?"]}]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não. Acontece algo muito parecido quando escrevemos código JavaScript, Ruby, Python ou qualquer outra linguagem dinâmica para a JVM. Como você não informou o tipo, o compilador tem que adivinhar ou confiar cegamente no que você está dizendo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Porém, existe uma forma de diminuir essa trabalheira toda dando dicas ao compilador sobre o tipo de dado que ele deve utilizar. Essas dicas chamam-se "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[", ou dicas de tipos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas atenção: que fique claro que estamos dando dicas ao compilador ao invés de declararmos estaticamente o tipo de dados que estamos utilizando."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos reescrever nosso código dessa forma para que o compilador receba nossas dicas:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case [^String text]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase text))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(upper-case \"umba umba umba ê\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"UMBA UMBA UMBA Ê\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa marcação "]},{"tag":"monospaced","content":[{"tag":"text","content":["^String"]}]},{"tag":"text","content":[" antes do tipo indica ao compilador que "]},{"tag":"monospaced","content":[{"tag":"text","content":["text"]}]},{"tag":"text","content":[" deve ser do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.String"]}]},{"tag":"text","content":[". Se tentarmos passar qualquer coisa diferente de "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[", a JVM vai reclamar na mesma hora."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(upper-case 3.14159)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; ClassCastException java.lang.Double cannot be cast to"]},{"tag":"br","content":null},{"tag":"code-text","content":["; java.lang.String  user/upper-case (NO_SOURCE_FILE:2)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Aí você pensa "]},{"tag":"italic","content":[{"tag":"text","content":["ah, tá. era para ter passado "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[" e passei "]},{"tag":"monospaced","content":[{"tag":"text","content":["Double"]}]}]},{"tag":"text","content":[". Bonito, não?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas não é só isso. Ao usar "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[" você ainda leva uma otimização de código totalmente de graça."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O "]},{"tag":"italic","content":[{"tag":"text","content":["bytecode"]}]},{"tag":"text","content":[" gerado fica equivalente a esse código Java:"]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["public Object invoke(Object par01) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  return ((String)par01).toUpperCase();"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null},{"tag":"code-text","content":["(new user$upper_case()).invoke(\"umba umba umba ê\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["// \"UMBA UMBA UMBA Ê\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você imaginou que o código, além de menor, também ficou mais rápido, acertou."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"italic","content":[{"tag":"text","content":["Então vou usar isso no meu código inteiro!"]}]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Calma lá. Clojure não deixa de ser uma linguagem dinâmica apenas por ter "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[". A contrapartida dessas dicas é que elas poluem o código e dificilmente você vai precisar que todo seu código seja otimizado."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Quando otimizar"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não adianta sair adicionando "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[" no código sem critério. A primeira coisa a ser feita é detectar onde estão os gargalos, os pontos que consomem mais recursos sem trazer resultados imediatos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma vez que você localize os pontos lentos da aplicação, adicione a seguinte linha no início do seu código:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(set! *warn-on-reflection* true)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora o compilador vai nos avisar toda vez que for obrigado a usar "]},{"tag":"italic","content":[{"tag":"text","content":["reflection"]}]},{"tag":"text","content":[" para invocar um método ou acessar um membro."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos usar a nossa função "]},{"tag":"monospaced","content":[{"tag":"text","content":["upper-case"]}]},{"tag":"text","content":[" para detectar os pontos que podem ser otimizados com "]},{"tag":"italic","content":[{"tag":"text","content":["type hinting"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(set! *warn-on-reflection* true)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case [text]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase text))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Reflection warning, NO_SOURCE_PATH:2:3 - reference to field"]},{"tag":"br","content":null},{"tag":"code-text","content":["; toUpperCase can't be resolved."]},{"tag":"br","content":null},{"tag":"code-text","content":["; #'user/upper-case"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa é a mensagem do compilador nos avisando que não sabe que tipo contém o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["toUpperCase"]}]},{"tag":"text","content":[". Como estamos usando "]},{"tag":"monospaced","content":[{"tag":"text","content":["toUpperCase"]}]},{"tag":"text","content":[" em "]},{"tag":"monospaced","content":[{"tag":"text","content":["text"]}]},{"tag":"text","content":[", vamos adicionar o "]},{"tag":"italic","content":[{"tag":"text","content":["type hint"]}]},{"tag":"text","content":[" nele."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que o erro ocorreu durante a compilação da função, e não durante sua execução. Lembre-se que todo código executado já foi compilado em algum momento, incluindo o código que escrevemos no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case-2 [^String text]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase text))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #'user/upper-case-2"]},{"tag":"br","content":null},{"tag":"code-text","content":["(upper-case-2 \"umba umba umba ê\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"UMBA UMBA UMBA Ê\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Sem erros nem avisos, resolvemos a questão do "]},{"tag":"italic","content":[{"tag":"text","content":["reflection"]}]},{"tag":"text","content":[" na expressão."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Falamos sobre otimização e gargalos mas não mostramos na prática o que isso significa."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos posicionar as duas funções, com e sem "]},{"tag":"italic","content":[{"tag":"text","content":["type hint"]}]},{"tag":"text","content":[" e executar uma iteração apresentando o tempo gasto com cada versão."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case [texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase texto))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Reflection warning, NO_SOURCE_PATH:2:3 - reference to field"]},{"tag":"br","content":null},{"tag":"code-text","content":["; toUpperCase can't be resolved."]},{"tag":"br","content":null},{"tag":"code-text","content":["; #'user/upper-case"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case-2 [^String texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase texto))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #'user/upper-case-2"]},{"tag":"br","content":null},{"tag":"code-text","content":["(time (dotimes [_ 100000] (upper-case \"mandarina\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Elapsed time: 327.720765 msecs\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(time (dotimes [_ 100000] (upper-case-2 \"mandarina\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Elapsed time: 55.403849 msecs\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nesse nosso exemplo simples o processamento ficou de seis a sete vezes mais rápido."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa marcação de "]},{"tag":"italic","content":[{"tag":"text","content":["type hint"]}]},{"tag":"text","content":[" é tratada como um metadado, sendo que os códigos abaixo são equivalentes:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case-2 [^String texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase texto))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn upper-case-3 [^{String true} texto]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (.toUpperCase texto))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A forma utilizada em "]},{"tag":"monospaced","content":[{"tag":"text","content":["upper-case-2"]}]},{"tag":"text","content":[" é preferida, mais limpa e mais concisa."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Usando tipos primitivos"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vimos que utilizar "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[" com objetos não tem segredo, bastando colocar o nome da classe como uma marcação no argumento da função."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para utilizarmos "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[" com tipos primitivos o procedimento é praticamente o mesmo, mas você precisa conhecer as marcações especiais para cada tipo de dado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos forçar o uso de tipos primitivos para ganharmos velocidade no código, ou para manter a compatibilidade com bibliotecas que já existam."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["byte"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["char"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["int"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["double"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["float"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["short"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["boolean"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["bytes"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["chars"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ints"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["doubles"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["floats"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["shorts"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["booleans"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso usamos as anotações "]},{"tag":"monospaced","content":[{"tag":"text","content":["^byte"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["^char"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["^int"]}]},{"tag":"text","content":[", %^double"]},{"tag":"monospaced","content":[{"tag":"text","content":[", "]}]},{"tag":"text","content":["^float"]},{"tag":"monospaced","content":[{"tag":"text","content":[", "]}]},{"tag":"text","content":["^short"]},{"tag":"monospaced","content":[{"tag":"text","content":[" e "]}]},{"tag":"text","content":["^boolean"]},{"tag":"monospaced","content":[{"tag":"text","content":[" se estivermos lidando com valores escalares, e "]}]},{"tag":"text","content":["^bytes"]},{"tag":"monospaced","content":[{"tag":"text","content":[", "]}]},{"tag":"text","content":["^chars"]},{"tag":"monospaced","content":[{"tag":"text","content":[", "]}]},{"tag":"text","content":["^ints"]},{"tag":"monospaced","content":[{"tag":"text","content":[", %^doubles"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["^floats"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["^shorts"]}]},{"tag":"text","content":[" ao lidarmos com "]},{"tag":"italic","content":[{"tag":"text","content":["arrays"]}]},{"tag":"text","content":[" dos respectivos tipos. Note o símbolo de "]},{"tag":"monospaced","content":[{"tag":"text","content":["^"]}]},{"tag":"text","content":[" antes do nome do tipo e seu respectivo o plural quando estamos falando de "]},{"tag":"italic","content":[{"tag":"text","content":["arrays"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vale lembrar que um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" Java é diferente de um vetor Clojure. Um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" Java é um tipo primitivo e mutável, criado para acesso rápido a seus itens e consumo mínimo de memória, enquanto um vetor do Clojure é uma estrutura imutável e persistente, criada para equilibrar confiabilidade em ambientes concorrentes com melhor aproveitamento de memória."]},{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Tipos primitivos e objetos"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Lá no início, quando o Java ainda se chamava "]},{"tag":"italic","content":[{"tag":"text","content":["Oak"]}]},{"tag":"ref","content":[{"tag":"text","content":["oak-language"]}]},{"tag":"text","content":[", seu principal foco era ser um ambiente e uma linguagem de programação para dispositivos móveis e eletrodomésticos. Como a memória e o processamento desses dispositivos são escassos, a solução foi separar os dados numéricos e lógicos em "]},{"tag":"italic","content":[{"tag":"text","content":["tipos primitivos"]}]},{"tag":"text","content":[" e deixar o resto como especializações da classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Tipos primitivos ocupam menos memória e permitem operações aritméticas mais rápidas, mas conforme as aplicações foram aumentando de tamanho e a memória deixando de ser um problema, foi necessário criar classes equivalentes aos tipos primitivos, chamadas de "]},{"tag":"italic","content":[{"tag":"text","content":["wrappers"]}]},{"tag":"text","content":[". Essas classes "]},{"tag":"italic","content":[{"tag":"text","content":["wrapper"]}]},{"tag":"text","content":[" são usadas também pelo Clojure."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para convertermos um valor, basta usarmos uma função que tenha o mesmo nome do tipo primitivo: "]},{"tag":"monospaced","content":[{"tag":"text","content":["byte"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["char"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["int"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["double"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["float"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["short"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["boolean"]}]},{"tag":"text","content":[", respectivamente."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [^ints numeros (int-array 10)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println numeros)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<int[] [I@260c1645>"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println (.getBytes \"Clojure\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<byte[] [B@709724c7>"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; ]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["byte-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["char-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["int-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["double-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["float-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["short-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["boolean-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Usamos a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["int-array"]}]},{"tag":"text","content":[" para criarmos um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["int"]}]},{"tag":"text","content":[". Você pode usar os tipos primitivos que citamos seguido de "]},{"tag":"monospaced","content":[{"tag":"text","content":["-array"]}]},{"tag":"text","content":[" para descobrir o nome da função que cria um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de um tipo primitivo."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["to-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["into-array"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para convertermos uma sequencia em um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[", podemos utilizar as funções "]},{"tag":"monospaced","content":[{"tag":"text","content":["to-array"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["into-array"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def numeros (range 1 11))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(to-array numeros)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Object[] [Ljava.lang.Object;@47cd705>"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; ]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O problema de "]},{"tag":"monospaced","content":[{"tag":"text","content":["to-array"]}]},{"tag":"text","content":[" é que ele nos retorna um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[", já que todos os valores em Clojure são tratados como "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[" por padrão."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note o nome que o Java retorna para esse "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de objetos."]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["[Ljava.lang.Object;@47cd705"]},{"tag":"br","content":null},{"tag":"code-text","content":[";;]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Temos um caracter "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷"]}]},{"tag":"text","content":[", que indica que estamos lidando com um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de uma posição, e "]},{"tag":"monospaced","content":[{"tag":"text","content":["L"]}]},{"tag":"text","content":[" que indica que é do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":[". Não me perguntem porque é "]},{"tag":"monospaced","content":[{"tag":"text","content":["L"]}]},{"tag":"text","content":[" ao invés de "]},{"tag":"monospaced","content":[{"tag":"text","content":["O"]}]},{"tag":"text","content":[", porque eu também queria saber."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em seguida temos o nome da classe, "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Object"]}]},{"tag":"text","content":[" e a referência do objeto após a arroba."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para criarmos um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de um tipo específico precisamos utilizar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["into-array"]}]},{"tag":"text","content":[". Para isso precisamos informar o tipo que queremos usando o campo "]},{"tag":"monospaced","content":[{"tag":"text","content":["TYPE"]}]},{"tag":"text","content":[" do respectivo "]},{"tag":"italic","content":[{"tag":"text","content":["wrapper"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se quisermos um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["int"]}]},{"tag":"text","content":[", precisamos usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["Integer/TYPE"]}]},{"tag":"text","content":[". De "]},{"tag":"monospaced","content":[{"tag":"text","content":["long"]}]},{"tag":"text","content":[" devemos usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["Long/TYPE"]}]},{"tag":"text","content":[" e assim por diante."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(into-array Integer/TYPE numeros)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<int[] [I@4202c561>"]},{"tag":"br","content":null},{"tag":"code-text","content":["(into-array Long/TYPE numeros)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<long[] [J@18f7a9d0>"]},{"tag":"br","content":null},{"tag":"code-text","content":[";;]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Todos os itens da sequencia devem ter o mesmo tipo, uma vez que um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" Java é uma estrutura que permite apenas um tipo de dado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note o nome interno do objeto que é retornado por "]},{"tag":"monospaced","content":[{"tag":"text","content":["into-array"]}]},{"tag":"text","content":[": "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷I"]}]},{"tag":"text","content":[" indica um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["int"]}]},{"tag":"text","content":[", enquanto "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷J"]}]},{"tag":"text","content":[" indica um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["long"]}]},{"tag":"text","content":[". Da mesma forma temos "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷C"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["char"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷S"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["short"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷Z"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["boolean"]}]},{"tag":"text","content":[" (também não me pergunte o porquê), "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷F"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["float"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷D"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["double"]}]},{"tag":"text","content":[". Esse nome interno é um padrão da "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" e vai ser encontrado tanto no Clojure quanto no Java puro."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se tivermos um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de duas dimensões, teremos dois caracteres "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷"]}]},{"tag":"text","content":[" e assim por diante, seguidos da letra que indica o tipo armazenado pelo vetor."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["make-array"]}]},{"tag":"text","content":[" para criar "]},{"tag":"italic","content":[{"tag":"text","content":["arrays"]}]},{"tag":"text","content":[" de quantas dimensões quisermos e a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["alength"]}]},{"tag":"text","content":[" vai nos dizer o tamanho do vetor ou matriz."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def vetor (make-array Integer/TYPE 1000))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(alength vetor)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 1000"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def matriz-10-15 (make-array Integer/TYPE 10 15))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(alength matriz-10-15)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 10"]},{"tag":"br","content":null},{"tag":"code-text","content":["(alength (aget matriz-10-15 0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 15"]},{"tag":"br","content":null},{"tag":"code-text","content":["user=> (type matriz-10-15)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; [[I"]},{"tag":"br","content":null},{"tag":"code-text","content":[";;]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que o tipo da matriz é "]},{"tag":"monospaced","content":[{"tag":"text","content":["▷▷I"]}]},{"tag":"text","content":[", que indica que temos uma matriz de duas dimensões do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["int"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como dissemos anteriormente, tipos primitivos permitem que operações aritméticas sejam executadas com maior velocidade e menor consumo de memória."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro vamos reaproveitar nosso projeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["integracao"]}]},{"tag":"text","content":[" e adicionar um método à classe Java "]},{"tag":"monospaced","content":[{"tag":"text","content":["meu.codigo.java.MinhaClasse"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  public static long soma(long a, long b) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    return a + b;"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esse método vai nos ser útil para efetuarmos uma soma entre valores primitivos."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["areduce"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar uma lista com um milhão de números e também um "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["long"]}]},{"tag":"text","content":[" com os mesmos valores."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def numeros (range 0 1000000))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def vetor (into-array Long/TYPE numeros))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos calcular a soma de todos os itens da lista e do "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[". Para isso vamos usar "]},{"tag":"monospaced","content":[{"tag":"text","content":["reduce"]}]},{"tag":"text","content":[" com a lista, "]},{"tag":"monospaced","content":[{"tag":"text","content":["reduce"]}]},{"tag":"text","content":[" com o "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" e a macro "]},{"tag":"monospaced","content":[{"tag":"text","content":["areduce"]}]},{"tag":"text","content":[", que serve especificamente para processar informações em "]},{"tag":"italic","content":[{"tag":"text","content":["arrays"]}]},{"tag":"text","content":[" de tipos primitivos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para medir o tempo de cada execução, vamos criar uma macro que executa mil vezes o trecho de código informado e retorna o tempo gasto na execução. É necessário executar várias vezes para tentarmos tirar a influência das otimizações da "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" da conta."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Após algumas execuções com o mesmo resultado, a "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" faz uma otimização chamada "]},{"tag":"italic","content":[{"tag":"text","content":["inlining"]}]},{"tag":"text","content":[", que reduz muito o tempo de execução do cóigo. Se simplesmente executarmos um código depois do outro, existe sempre a possibilidade da primeira execução ser bem mais lenta que as demais por conta disso."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defmacro benchmark [code]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  `(time (first (doall (repeatedly 1000 (fn [] ~code))))))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(benchmark (reduce + numeros))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Elapsed time: 6678.846631 msecs\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(benchmark (reduce + vetor))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Elapsed time: 36814.423599 msecs\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(benchmark (areduce ^long vetor"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    idx"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    ret"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    0"]},{"tag":"br","content":null},{"tag":"code-text","content":["                    (MinhaClasse/soma ret"]},{"tag":"br","content":null},{"tag":"code-text","content":["                                    ^long (aget ^longs vetor idx))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["\"Elapsed time: 1941.822068 msecs\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["As duas operações que usam o "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" são, ao mesmo tempo, muito mais lenta e muito mais rápida, e é por isso que devemos tomar cuidado ao utilizar valores primitivos para ganhar velocidade."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["autoboxing"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando utilizamos "]},{"tag":"monospaced","content":[{"tag":"text","content":["reduce"]}]},{"tag":"text","content":[" com o "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[", cada um dos valores inteiros primitivos é convertido para seu respectivo "]},{"tag":"italic","content":[{"tag":"text","content":["wrapper"]}]},{"tag":"text","content":[", a classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["Integer"]}]},{"tag":"text","content":[". Essa conversão é feita automaticamente pela própria "]},{"tag":"italic","content":[{"tag":"text","content":["JVM"]}]},{"tag":"text","content":[" e chama-se "]},{"tag":"italic","content":[{"tag":"text","content":["autoboxing"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["boxing"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["unboxing"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Converter um valor primitivo para um "]},{"tag":"italic","content":[{"tag":"text","content":["wrapper"]}]},{"tag":"text","content":[" chama-se "]},{"tag":"italic","content":[{"tag":"text","content":["boxing"]}]},{"tag":"text","content":[" e o caminho contrário chama-se "]},{"tag":"italic","content":[{"tag":"text","content":["unboxing"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[", que por si só também é uma estrutura primitiva, é convertido internamente para uma sequencia do Clojure, o que também consome tempo. No final das contas, o que achamos que seria mais eficiente acaba sendo seis vezes mais lento."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já quando usamos "]},{"tag":"monospaced","content":[{"tag":"text","content":["reduce"]}]},{"tag":"text","content":[" com uma sequencia contendo objetos, não existe a necessidade de "]},{"tag":"italic","content":[{"tag":"text","content":["autoboxing"]}]},{"tag":"text","content":[" nem de criar uma nova estrutura de dados."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já com "]},{"tag":"monospaced","content":[{"tag":"text","content":["areduce"]}]},{"tag":"text","content":[" a situação é diferente, já que é uma macro que trabalha sem converter o "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" para uma sequencia e também sem perder tempo com "]},{"tag":"italic","content":[{"tag":"text","content":["autoboxing"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas, se velocidade for algo realmente crítico, experimente escrever o código diretamente em Java e chamá-lo no Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um método em Java e executar o teste de velocidade sob as mesmas condições dos anteriores."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["  public static long somaArray(long[] vetor) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["    long soma = 0;"]},{"tag":"br","content":null},{"tag":"code-text","content":["    for (long i = 0; i < vetor.length; i++) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["      soma += vetor[i];"]},{"tag":"br","content":null},{"tag":"code-text","content":["    }"]},{"tag":"br","content":null},{"tag":"code-text","content":["    return soma;"]},{"tag":"br","content":null},{"tag":"code-text","content":["  }"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos executar o nosso método recém-criado."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(benchmark (MinhaClasse/somaArray ^ints vetor))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"Elapsed time: 53.776577 msecs\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nosso código em Java puro foi "]},{"tag":"italic","content":[{"tag":"text","content":["126"]}]},{"tag":"text","content":[" vezes mais rápido que a versão usando sequencia e "]},{"tag":"monospaced","content":[{"tag":"text","content":["reduce"]}]},{"tag":"text","content":[", e "]},{"tag":"italic","content":[{"tag":"text","content":["36"]}]},{"tag":"text","content":[" vezes mais rápido que a versão utilizando "]},{"tag":"italic","content":[{"tag":"text","content":["array"]}]},{"tag":"text","content":[" e tipos primitivos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ah, então Clojure é lento? Nesse caso específico ganhamos muito mais escrevendo a operação diretamente no Java, mas você precisa pesar todas as suas necessidades, o seu tempo de desenvolvimento e a quantidade de problemas que você pode ter sem as abstrações já testadas do Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A minha opinião, se você quiser saber, é que você deve conhecer as ferramentas que tem para saber qual usar no melhor momento. Nesse último exemplo nós usamos o melhor de cada mundo para chegar ao melhor resultado possível."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No final, antes mesmo de otimizar, pergunte-se se realmente vale a pena investir tempo, e dinheiro do projeto ou da empresa, para ganhar tempo naquele trecho de código em específico. Quase sempre a resposta é um "]},{"tag":"italic","content":[{"tag":"text","content":["não"]}]},{"tag":"text","content":[" bem sonoro."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para encerrar o assunto, vamos às limitações do uso de tipos primitivos. Você deve estar se perguntando por que então não usamos tipos primitivos para tudo?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A resposta curta é "]},{"tag":"italic","content":[{"tag":"text","content":["não"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro temos a questão da perda de "]},{"tag":"italic","content":[{"tag":"text","content":["performance"]}]},{"tag":"text","content":[" quando utilizamos tipos primitivos e ocorre "]},{"tag":"italic","content":[{"tag":"text","content":["autoboxing"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como vimos, além de poluirmos o código com "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[" ainda temos um código mais lento quando não utilizamos tipos primitivos corretamente."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Depois temos uma limitação do próprio Clojure, onde uma função não pode ter mais de quatro parâmetros com tipos primitivos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos escrever uma função chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["hypo2d"]}]},{"tag":"text","content":[", onde calculamos a "]},{"tag":"italic","content":[{"tag":"text","content":["hipotenusa"]}]},{"tag":"text","content":[" de um triângulo retângulo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A hipotenusa nada mais é do que a diagonal entre dois segmentos de reta perpendiculares. Esses dois segmentos são chamados "]},{"tag":"italic","content":[{"tag":"text","content":["catetos"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Teorema de Pitágoras"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O tamanho da hipotenusa é igual à raiz quadrada da soma dos quadrados dos catetos. Essa fórmula é conhecida como "]},{"tag":"italic","content":[{"tag":"text","content":["Teorema de Pitágoras"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lanh.Math"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["pow"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["sqrt"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para calcularmos a potência de um número vamos usar a função Java "]},{"tag":"monospaced","content":[{"tag":"text","content":["pow"]}]},{"tag":"text","content":[", e para calcularmos a raiz quadrada vamos utilizar o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["sqrt"]}]},{"tag":"text","content":[", ambos pertencentes à classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Math"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn hypo2d [^double x1 ^double y1"]},{"tag":"br","content":null},{"tag":"code-text","content":["              ^double x2 ^double y2]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (Math/sqrt (+ (Math/pow (- x2 x1) 2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                (Math/pow (- y2 y1) 2))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(hypo2d 0 0 3 4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 5.0"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos calcular a diagonal de um paralelepípedo. Para isso vamos extrapolar o "]},{"tag":"italic","content":[{"tag":"text","content":["Teorema de Pitágoras"]}]},{"tag":"text","content":[" para trabalhar com três dimensões ao invés de duas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para chegarmos nesse valor precisamos calcular a raiz cúbica da soma dos quadrados das arestas do paralelepípedo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Só para lembrar, um cubo é um paralelepípedo cujas arestas tem o mesmo tamanho nas três dimensões."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn hypo3d [^double x1 ^double y1"]},{"tag":"br","content":null},{"tag":"code-text","content":["              ^double z1 ^double x2"]},{"tag":"br","content":null},{"tag":"code-text","content":["              ^double y2 ^double z2]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (Math/pow (+ (Math/pow (- x2 x1) 2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["               (Math/pow (- y2 y1) 2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["               (Math/pow (- z2 z1) 2))"]},{"tag":"br","content":null},{"tag":"code-text","content":["            1/3))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; CompilerException java.lang.IllegalArgumentException:"]},{"tag":"br","content":null},{"tag":"code-text","content":["; fns taking primitives support only 4 or fewer args"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não podemos utilizar tipos primitivos nesse caso, mas se escrevermos o código utilizando os tipos do próprio Clojure, a nossa função compila e executa sem problemas."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn hypo3d [x1 y1"]},{"tag":"br","content":null},{"tag":"code-text","content":["              z1 x2"]},{"tag":"br","content":null},{"tag":"code-text","content":["              y2 z2]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (Math/pow (+ (Math/pow (- x2 x1) 2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["               (Math/pow (- y2 y1) 2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["               (Math/pow (- z2 z1) 2))"]},{"tag":"br","content":null},{"tag":"code-text","content":["            1/3))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(hypo3d 0 0 0 1 1 1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 1.4422495703074083"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Polimorfismo com interfaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por mais que a programação funcional nos permita resolver qualquer problema que possa ser resolvido com orientação a objetos, não podemos fechar os olhos para o fato de que um lado tem muito a aprender com o outro e que, apesar de Clojure não ser uma linguagem híbrida como acontece com "]},{"tag":"italic","content":[{"tag":"text","content":["JavaScript"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["Scala"]}]},{"tag":"text","content":[", e apesar de ser uma linguagem dinâmica, podemos fazer uso de interfaces para garantir que uma estrutura de dados vai obedecer a um contrato predeterminado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A forma mais próxima ao modo de trabalhar do Java, é usando interfaces. Uma interface define o conjunto mínimo de características que a estrutura de dados, classe ou objeto, precisa ter para ser aceito. É um contrato que deve ser cumprido para que um objeto seja aceito como uma implementação de um determinado tipo ou classe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos pensar em um polígono e que características ele precisa ter para ser aceito como tal."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Só para deixar claro, um polígono é uma forma geométrica fechada bidimensional formada por linhas retas"]},{"tag":"ref","content":[{"tag":"text","content":["elementos"]}]},{"tag":"text","content":[", o que exclui segmentos de retas, círculos, elípses."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Um polígono precisa ter uma quantidade de arestas e cada aresta deve ter um tamanho, então já temos aqui duas características. Um polígono tem também perímetro, área e o nosso vai ter também um nome."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["As precondições que exigem que o polígono tenha pelo menos três arestas, que o tamanho de cada aresta seja maior que zero e que suas dimesnões devem ser suficientes para que a figura fique fechada podem ficar por conta da função que vai criá-los para nós ou da função que você achar mais conveniente."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Interfaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Interfaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos então criar uma interface Java que atenda a essas características, e para isso vamos usar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["definterface"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(definterface Poligono"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (^String nome      [])"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (arestas           [])"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (^long   vertices  [])"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (^double perimetro [])"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (^double area      []))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; user.Poligono"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Criamos cinco propriedades em forma de método, todos sem nenhum argumento, com seus respectivos tipos, com exceção de "]},{"tag":"monospaced","content":[{"tag":"text","content":["arestas"]}]},{"tag":"text","content":[". Como não definimos um tipo nesse caso, o retorno do método é definido como "]},{"tag":"monospaced","content":[{"tag":"text","content":["Object"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos então implementar uma função "]},{"tag":"monospaced","content":[{"tag":"text","content":["criar-quadrado"]}]},{"tag":"text","content":[", que gera quadrados do tamanho que quisermos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn criar-quadrado [^double lado]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  {:pre  [(> lado 0)]}"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (reify user.Poligono"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (nome [this]  \"quadrado\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (arestas [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      [lado lado lado lado])"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (vertices [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (count (.arestas this)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (perimetro [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (reduce + (.arestas this)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (area [this]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (* lado lado))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def quadrado-3 (criar-quadrado 3.0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.area quadrado-3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 9.0"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.vertices quadrado-3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 4"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.perimetro quadrado-3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 12.0"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def quadrado-4 (criar-quadrado 4.0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.area quadrado-4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 16.0"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.vertices quadrado-4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 4"]},{"tag":"br","content":null},{"tag":"code-text","content":["(.perimetro quadrado-4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 16"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Lembre-se que dissemos que uma precondição para a existência de um polígono é que o tamanho das arestas deve ser maior que zero."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(criar-quadrado 0)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; AssertionError Assert failed: (> lado 0)  user/criar-quadrado"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Até aqui, nenhuma novidade. Utilizamos uma "]},{"tag":"italic","content":[{"tag":"text","content":["closure"]}]},{"tag":"text","content":[" para armazenar o tamanho de uma aresta qualquer do quadrado para criarmos nosso objeto Java, precondição para garantirmos que os dados estão dentro das restrições, "]},{"tag":"italic","content":[{"tag":"text","content":["type hints"]}]},{"tag":"text","content":[" para definirmos o retorno do método e o tipo de dado que vamos utilizar e "]},{"tag":"monospaced","content":[{"tag":"text","content":["reify"]}]},{"tag":"text","content":[" para criarmos o objeto."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Lidando com exceções"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando escrevemos código que não trabalha diretamente com classes Java, como quando manipulamos estruturas de dados do Clojure por exemplo, não é comum termos que nos preocupar com manipulação e tratamento de exceções, como acontece em Java."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Porém, ao lidarmos com bibliotecas Java ou com recursos externos, como arquivos, conexões com bancos de dados ou rede, passamos a ter exatamente as mesmas preocupações e precauções que teríamos se estivessemos escrevendo código Java."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Erros e exceções"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando falamos da forma como erros são tratados na JVM, é comum falarmos em "]},{"tag":"italic","content":[{"tag":"text","content":["lançar"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["capturar"]}]},{"tag":"text","content":[" exceções."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro, falamos em "]},{"tag":"italic","content":[{"tag":"text","content":["exceções"]}]},{"tag":"text","content":[" por se tratar de um comportamento que não deveria ser regra. É um dos motivos pelo qual está conceitualmente incorreto usarmos exceções para definir o fluxo de uma aplicação."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.OutOfMemoryError"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma exceção é diferente de um erro, uma vez que um erro não deve ser recuperado. Um exemplo disso é quando acaba a memória disponível para a aplicação e temos um "]},{"tag":"monospaced","content":[{"tag":"text","content":["OutOfMemoryError"]}]},{"tag":"text","content":[". Via de regra, um erro é algo fatal que vai finalizar a aplicação, enquanto uma exceção oferece uma chance de ser tratada."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.Exception"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.Error"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.Throwable"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Toda exceção herda da classe Java "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Exception"]}]},{"tag":"text","content":[", enquanto todo erro herda de "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Error"]}]},{"tag":"text","content":[". Ambos herdam de "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.Throwable"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_08/exceptions.jpg \"Diagrama de exceções na JVM\" label=cap08-exceptions w=80%"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Lançando exceções"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"monospaced","content":[{"tag":"text","content":["Throwable"]}]},{"tag":"text","content":[", em português, significa "]},{"tag":"italic","content":[{"tag":"text","content":["algo que pode ser arremessado ou lançado"]}]},{"tag":"text","content":[". Para entender o porque desse nome, vamos olhar para a "]},{"tag":"italic","content":[{"tag":"text","content":["pilha de execução"]}]},{"tag":"text","content":[", ou "]},{"tag":"italic","content":[{"tag":"text","content":["pilha de chamadas"]}]},{"tag":"text","content":[", de uma aplicação na JVM."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando você inicia uma aplicação, temos uma pilha de chamadas vazia. O primeiro método a ser executado, conhecido por "]},{"tag":"italic","content":[{"tag":"text","content":["entrypoint"]}]},{"tag":"text","content":[", é inserido na pilha, numa posição imediatamente abaixo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando algum método (ou função) é executado, ele também é inserido na pilha de chamadas. Se esse método chama outro método, esse outro também vai para a pilha e assim por diante."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.StackOverflowError"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Essa pilha tem um tamanho fixo predeterminado pela JVM. Quando a pilha fica cheia e tentamos colocar mais um item, temos um "]},{"tag":"monospaced","content":[{"tag":"text","content":["StackOverflowError"]}]},{"tag":"text","content":[", ou "]},{"tag":"italic","content":[{"tag":"text","content":["estouro de pilha"]}]},{"tag":"text","content":[". É o que acontece quando uma função chama a si mesma indefinidamente sem o uso de "]},{"tag":"italic","content":[{"tag":"text","content":["tail call recursion"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando ocorre algum problema na execução de um desses métodos, uma exceção é lançada. Isso significa que algo que não é o comportamento padrão causou um problema e a notificação desse problema foi jogada para cima. Sim, "]},{"tag":"italic","content":[{"tag":"text","content":["lançar"]}]},{"tag":"text","content":[" é exatamente isso: jogar o problema para cima, para que o método imediatamente acima na pilha se vire para resolver."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se esse método imediatamente acima não tratar a exceção, ela é lançada para o método acima, e assim por diante até chegar ao topo da pilha. Caso a exceção não seja tratada no topo da pilha a aplicação é finalizada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por outro lado, um método pode "]},{"tag":"italic","content":[{"tag":"text","content":["capturar"]}]},{"tag":"text","content":[" a exceção, escolhendo tratá-la, executando algum código que faça a aplicação continuar sem maiores problemas; ou pode escolher lançar novamente uma exceção, esperando que os métodos que estiverem acima na pilha de execução cuidem do problema."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando um método é finalizado normalmente ou através do lançamento de uma exceção, ele é retirado da pilha, abrindo espaço para que outro método seja alocado."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Tratando e capturando exceções"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["try"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["catch"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["finally"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No Java temos, basicamente, um bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["try"]}]},{"tag":"text","content":[", que contém o código que pode lançar a exceção, um ou mais blocos "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[", onde a exceção é "]},{"tag":"italic","content":[{"tag":"text","content":["capturada"]}]},{"tag":"text","content":[" ("]},{"tag":"italic","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[" é "]},{"tag":"italic","content":[{"tag":"text","content":["capturar"]}]},{"tag":"text","content":[" em Inglês) e tratada, e um bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[", onde fica o código que deve ser executado havendo lançamento de exceção ou não."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["try {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  acessaArquivo();"]},{"tag":"br","content":null},{"tag":"code-text","content":["} catch (IOException e) {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  System.out.println(\"Ocorreu um problema: \" + e.getMessage());"]},{"tag":"br","content":null},{"tag":"code-text","content":["} finally {"]},{"tag":"br","content":null},{"tag":"code-text","content":["  System.out.println(\"Essa linha vai aparecer sempre\");"]},{"tag":"br","content":null},{"tag":"code-text","content":["}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Um bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["try"]}]},{"tag":"text","content":[" pode estar acompanhado por um ou mais blocos "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[" e/ou um bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[", mas nunca sozinho."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No Clojure temos os mesmos operadores "]},{"tag":"monospaced","content":[{"tag":"text","content":["try"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[", mas com sutis diferenças."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["slurp"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos começar criando uma função "]},{"tag":"monospaced","content":[{"tag":"text","content":["ler-mostrar"]}]},{"tag":"text","content":[" que tenta ler o conteúdo de um arquivo texto para então o exibir na tela. Para isso vamos usar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["slurp"]}]},{"tag":"text","content":[", que retorna todo o conteúdo do arquivo como texto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos fazer nossa função tentar abrir um arquivo que não existe para que ocorra um erro."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn ler-mostrar [arquivo]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (let [texto (slurp arquivo)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println \"Conteúdo do arquivo\" arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println texto)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ler-mostrar \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; FileNotFoundException batatas (O sistema não pode encontrar o"]},{"tag":"br","content":null},{"tag":"code-text","content":["; arquivo especificado)  java.io.FileInputStream.open (:-2)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["slurp"]}]},{"tag":"text","content":[" lançou uma exceção que não foi tratada pelo nosso código, então nossa função foi finalizada e a exceção lançada para quem chamou nosso código que, no nosso exemplo, foi o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos então tratar a exceção, exibindo uma mensagem de erro menos assustadora."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn ler-mostrar [arquivo]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (try"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (let [texto (slurp arquivo)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (println \"Conteúdo do arquivo\" arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (println texto))"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (catch java.io.FileNotFoundException e"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println \"Arquivo\" arquivo \"não encontrado\"))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ler-mostrar \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Arquivo batatas não encontrado"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora a exceção foi capturada pelo bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[" e pudemos exibir uma mensagem melhor."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos utilizar também o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[" para exibir uma mensagem ocorrendo erro ou não."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn ler-mostrar [arquivo]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (try"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (let [texto (slurp arquivo)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (println \"Conteúdo do arquivo\" arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (println texto))"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (finally"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (println \"Essa mensagem vai aparecer de qualquer jeito\"))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ler-mostrar \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Essa mensagem vai aparecer de qualquer jeito"]},{"tag":"br","content":null},{"tag":"code-text","content":["; FileNotFoundException batatas (O sistema não pode encontrar o"]},{"tag":"br","content":null},{"tag":"code-text","content":["; arquivo especificado)  java.io.FileInputStream.open (:-2)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Um desenvolvedor que tenha experiência com Java ou Ruby vai notar algo estranho aqui. A exceção foi exibida na tela mesmo utilizando "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[", que faz com que o código ignore a exceção quando não está acompanhada de "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Isso acontece porque em Clojure, como já sabemos, um código é uma lista de listas, sendo cada lista a representação de uma expressão. Toda expressão retorna um valor - mesmo "]},{"tag":"monospaced","content":[{"tag":"text","content":["nil"]}]},{"tag":"text","content":[" é um valor - e isso inclui a expressão que esteja capturando e tratando uma exceção."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.io.FileNotFoundException"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["try"]}]},{"tag":"text","content":[", por padrão, retorna a exceção que foi capturada, e por isso a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["ler-mostrar"]}]},{"tag":"text","content":[" retornou "]},{"tag":"monospaced","content":[{"tag":"text","content":["FileNotFoundException"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos modificar esse comportamento fazendo com que "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[" retorne um texto ao invés de uma exceção."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn ler-mostrar [arquivo]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (let [texto (try"]},{"tag":"br","content":null},{"tag":"code-text","content":["                (slurp arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                (catch Exception e"]},{"tag":"br","content":null},{"tag":"code-text","content":["                  (str \"== Arquivo \" arquivo \" não encontrado ==\")))]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println \"Conteúdo do arquivo\" arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println texto)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ler-mostrar \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Conteúdo do arquivo batatas"]},{"tag":"br","content":null},{"tag":"code-text","content":["; == Arquivo batatas não encontrado =="]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos também utilizar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[" ao mesmo tempo que "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn ler-mostrar [arquivo]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (let [texto (try"]},{"tag":"br","content":null},{"tag":"code-text","content":["                (slurp arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["                (catch Exception e"]},{"tag":"br","content":null},{"tag":"code-text","content":["                  (str \"== Arquivo \" arquivo \" não encontrado ==\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["                (finally"]},{"tag":"br","content":null},{"tag":"code-text","content":["                  (println \"Conteúdo do arquivo\" arquivo)))]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println texto)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ler-mostrar \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Conteúdo do arquivo batatas"]},{"tag":"br","content":null},{"tag":"code-text","content":["; == Arquivo batatas não encontrado =="]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["try"]}]},{"tag":"text","content":[" retorna o texto retornado pelo operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[", enquanto "]},{"tag":"monospaced","content":[{"tag":"text","content":["finally"]}]},{"tag":"text","content":[" é executado havendo ou não uma exceção."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos também esconder a ocorrência de uma exceção. Para isso, basta não executarmos nenhuma expressão no bloco "]},{"tag":"monospaced","content":[{"tag":"text","content":["catch"]}]},{"tag":"text","content":[". É uma prática que pode causar problemas, já que você simplesmente não sabe que ocorreu algum erro."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(try"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (slurp \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (catch Exception e))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; nil"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora informamos apenas o tipo da exceção e o "]},{"tag":"italic","content":[{"tag":"text","content":["binding"]}]},{"tag":"text","content":[" e nenhuma mensagem foi exibida."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Lançando exceções"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nem só de limpar a sujeira alheia vive o código Clojure. Podemos também lançar nossas próprias exceções."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["throw"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso usamos a forma especial "]},{"tag":"monospaced","content":[{"tag":"text","content":["throw"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Basta criar uma instância de "]},{"tag":"monospaced","content":[{"tag":"text","content":["Throwable"]}]},{"tag":"text","content":[" ou de qualquer outra classe que herde dela com uma mensagem de erro ou outra exceção que deve ser encapsulada. Se você tem experiência com Java não vai ver nenhuma novidade aqui."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn lanca-excecao []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (throw (Exception. \"Lancei uma exceção\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn captura-excecao []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (try"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (lanca-excecao)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (catch Exception e"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (println \"Erro:\" (.getMessage e)))))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(captura-excecao)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Erro: Lancei uma exceção"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["*e"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["pst"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["*e e pst"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando uma exceção é capturada e tratada dentro do código, o "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["*e"]}]},{"tag":"text","content":[" e a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["pst"]}]},{"tag":"text","content":[", presentes no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", não exibem informações sobre o erro."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Perdendo o medo da pilha de chamadas"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["stacktrace"]}]},{"tag":"index","content":[{"tag":"text","content":["pilha de chamadas"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando ocorre uma exceção não tratada, ou quando executamos o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["printStackTrace"]}]},{"tag":"text","content":[" de uma exceção, é exibida na tela uma lista de chamadas conhecida como "]},{"tag":"italic","content":[{"tag":"text","content":["stacktrace"]}]},{"tag":"text","content":[" ou "]},{"tag":"italic","content":[{"tag":"text","content":["pilha de chamadas"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para quem está começando, a pilha de chamadas é uma das partes mais desagradáveis e assustadores de lidar"]},{"tag":"ref","content":[{"tag":"text","content":["state-clojure"]}]},{"tag":"text","content":[", independente da linguagem. O iniciante tende a ignorar ou evitar se aprofundar na pilha e, muitas vezes, as informações exibidas ali acabam sendo a única forma de descobrir a causa do problema."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["pst"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos reaproveitar nossa função "]},{"tag":"monospaced","content":[{"tag":"text","content":["lanca-excecao"]}]},{"tag":"text","content":[" e vamos criar uma nova, chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["estoura-excecao"]}]},{"tag":"text","content":[", que ao invés de capturar e tratar a exceção, apenas joga para cima. Em seguida vamos invocar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["pst"]}]},{"tag":"text","content":[" para ver a pilha de chamadas no momento da exceção."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn lanca-excecao []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (throw (Exception. \"Lancei uma exceção\")))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn estoura-excecao []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Vou lançar uma exceção\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (lanca-excecao))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(estoura-excecao)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Vou lançar uma exceção"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Exception Lancei uma exceção  user/lanca-excecao (NO_SOURCE_FILE:1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(pst)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; java.lang.Exception: Lancei uma exceção"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                NO_SOURCE_FILE:1 user/lanca-excecao"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                NO_SOURCE_FILE:3 user/estoura-excecao"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                NO_SOURCE_FILE:1 user/eval775"]},{"tag":"br","content":null},{"tag":"code-text","content":[";              Compiler.java:6703 clojure.lang.Compiler.eval"]},{"tag":"br","content":null},{"tag":"code-text","content":[";              Compiler.java:6666 clojure.lang.Compiler.eval"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                   core.clj:2927 clojure.core/eval"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                    main.clj:239 clojure.main/repl[fn]"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                    main.clj:239 clojure.main/repl[fn]"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                    main.clj:257 clojure.main/repl[fn]"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                    main.clj:257 clojure.main/repl"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                       ... mais 14 linhas ..."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A pilha de chamadas começa da linha mais abaixo, onde fica o primeiro método a ter sido invocado. Dessa forma, o último método a ser invocado, onde geralmente ocorre a exceção, fica logo no topo, facilitando a leitura."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No nosso exemplo, note as três primeiras linhas. Temos "]},{"tag":"monospaced","content":[{"tag":"text","content":["NO_SOURCE_FILE"]}]},{"tag":"text","content":[" no lugar do nome do arquivo porque estamos usando o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[". A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["lanca-excecao"]}]},{"tag":"text","content":[" foi chamada pela função "]},{"tag":"monospaced","content":[{"tag":"text","content":["estoura-excecao"]}]},{"tag":"text","content":[", que foi chamada por uma tal de "]},{"tag":"monospaced","content":[{"tag":"text","content":["eval775"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vemos em seguida que essa "]},{"tag":"monospaced","content":[{"tag":"text","content":["eval775"]}]},{"tag":"text","content":[" é invocada através de um método Java chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["eval"]}]},{"tag":"text","content":[", que fica na linha "]},{"tag":"italic","content":[{"tag":"text","content":["6703"]}]},{"tag":"text","content":[" da classe "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.lang.Compiler"]}]},{"tag":"text","content":[" no arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["Compiler.java"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nesse ponto a informação já não é mais relevante, já que não pretendemos olhar como o compilador do Clojure funciona por dentro. É algo bem legal de se fazer, mas não é o foco desse livro."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["De volta ao topo da pilha, vemos que "]},{"tag":"monospaced","content":[{"tag":"text","content":["lanca-excecao"]}]},{"tag":"text","content":[" é realmente a causadora do problema, já que usamos um "]},{"tag":"monospaced","content":[{"tag":"text","content":["throw"]}]},{"tag":"text","content":[" dentro dela."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos complicar um pouco e reutilizar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["ler-mostrar"]}]},{"tag":"text","content":[" para tentar ler um arquivo que não existe e lançar uma exceção."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn ler-mostrar [arquivo]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (let [texto (slurp arquivo)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println \"Conteúdo do arquivo\" arquivo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println texto)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ler-mostrar \"batatas\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; FileNotFoundException batatas (O sistema não pode encontrar o"]},{"tag":"br","content":null},{"tag":"code-text","content":["; arquivo especificado)  java.io.FileInputStream.open (:-2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(pst)"]},{"tag":"br","content":null},{"tag":"code-text","content":[";java.io.FileNotFoundException: batatas (O sistema não pode encontrar"]},{"tag":"br","content":null},{"tag":"code-text","content":["; o arquivo especificado)"]},{"tag":"br","content":null},{"tag":"code-text","content":[";            (Unknown Source) java.io.FileInputStream.open"]},{"tag":"br","content":null},{"tag":"code-text","content":[";            (Unknown Source) java.io.FileInputStream.<init>"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                  io.clj:229 clojure.java.io/fn"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                   io.clj:69 clojure.java.io/fn[fn]"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                  io.clj:258 clojure.java.io/fn"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                   io.clj:69 clojure.java.io/fn[fn]"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                  io.clj:165 clojure.java.io/fn"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                   io.clj:69 clojure.java.io/fn[fn]"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                  io.clj:102 clojure.java.io/reader"]},{"tag":"br","content":null},{"tag":"code-text","content":[";             RestFn.java:410 clojure.lang.RestFn.invoke"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                AFn.java:154 clojure.lang.AFn.applyToHelper"]},{"tag":"br","content":null},{"tag":"code-text","content":[";             RestFn.java:132 clojure.lang.RestFn.applyTo"]},{"tag":"br","content":null},{"tag":"code-text","content":[";                core.clj:626 clojure.core/apply"]},{"tag":"br","content":null},{"tag":"code-text","content":[";               core.clj:6390 clojure.core/slurp"]},{"tag":"br","content":null},{"tag":"code-text","content":[";             RestFn.java:410 clojure.lang.RestFn.invoke"]},{"tag":"br","content":null},{"tag":"code-text","content":[";            NO_SOURCE_FILE:2 user/ler-mostrar"]},{"tag":"br","content":null},{"tag":"code-text","content":[";            NO_SOURCE_FILE:1 user/eval776"]},{"tag":"br","content":null},{"tag":"code-text","content":[";          Compiler.java:6703 clojure.lang.Compiler.eval"]},{"tag":"br","content":null},{"tag":"code-text","content":[";          Compiler.java:6666 clojure.lang.Compiler.eval"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O próprio tipo da exceção e sua respectiva mensagem já entregam o que aconteceu: o arquivo "]},{"tag":"italic","content":[{"tag":"text","content":["batatas"]}]},{"tag":"text","content":[" não foi encontrado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Supondo que o código do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.java.io"]}]},{"tag":"text","content":[" fosse meu ou da empresa em que trabalho, ou que eu tivesse livre acesso ao código fonte (sim, nós temos), eu começaria olhando essa pilha da seguinte forma:"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro eu procuraria a função que invoquei e causou o erro. No caso foi a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["ler-mostrar"]}]},{"tag":"text","content":[". Sabemos que "]},{"tag":"monospaced","content":[{"tag":"text","content":["invoke"]}]},{"tag":"text","content":[" é o método chamado pela classe Java responsável por implementar todas as funções do Clojure quando a função é executada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em seguida vemos que o erro ocorreu na chamada da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["slurp"]}]},{"tag":"text","content":[", que está na segunda linha do nosso código. Vemos depois chamadas a "]},{"tag":"monospaced","content":[{"tag":"text","content":["apply"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["applyTo"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["applyToHelper"]}]},{"tag":"text","content":[", que inferimos que tenha a ver com a passagem de parâmetros da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["slurp"]}]},{"tag":"text","content":[". Vemos então a chamada a "]},{"tag":"monospaced","content":[{"tag":"text","content":["invoke"]}]},{"tag":"text","content":[", que é onde o código de "]},{"tag":"monospaced","content":[{"tag":"text","content":["slurp"]}]},{"tag":"text","content":[" será executado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Temos então a chamada à função "]},{"tag":"monospaced","content":[{"tag":"text","content":["reader"]}]},{"tag":"text","content":[" do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.java.io"]}]},{"tag":"text","content":[" e uma série de chamadas a funções anônimas até chegar à classe Java "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.io.FileInputStream"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Você vai dessa forma, testando os argumentos e acompanhando o fluxo da aplicação até entender ou encontrar a causa do problema."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não custa repetir que, apesar da pilha de chamadas ser assustadora e longa, muitas vezes ela é sua única amiga na busca de uma solução para o problema."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Recentemente eu me deparei com uma mensagem de erro numa aplicação Web que pouco ajudava e uma pilha de chamadas que não era das mais amigáveis. Após prestar atenção no fluxo da aplicação e ler a pilha de chamadas pela décima vez, acabei descobrindo que o problema estava no modo como o browser lida com parâmetros muito longos na URL."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Depois de descobrir isso, todo o resto da pilha fez sentido e eu percebi que toda a informação que eu precisava estava lá. Só foi necessário pesquisar e prestar atenção."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Moral da história: não tenha medo da pilha de chamadas e não tenha preguiça de ler atentamente o que está ali."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Escolhendo o melhor tipo no Clojure"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O diagrama "]},{"tag":"ref-label","content":[{"tag":"text","content":["definindo-tipos"]}]},{"tag":"text","content":[" nos ajuda a selecionar o tipo correto de dados ao integrar nosso código Clojure com bibliotecas Java já existentes ou mesmo fazendo o oposto, usando o bytecode gerado pelo Clojure dentro da sua aplicação Java."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Emerick, Chas"]}]},{"tag":"index","content":[{"tag":"text","content":["Suzart, Paulo"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Este diagrama foi criado por Chas Emerick"]},{"tag":"ref","content":[{"tag":"text","content":["type-definition-en"]}]},{"tag":"text","content":[", coautor de "]},{"tag":"italic","content":[{"tag":"text","content":["Clojure Programming"]}]},{"tag":"ref","content":[{"tag":"text","content":["clojure-programming"]}]},{"tag":"text","content":[" e traduzido para o português por Paulo Suzart"]},{"tag":"ref","content":[{"tag":"text","content":["type-definition-pt"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ambos foram bacanas ao ceder a imagem e a tradução para este livro sem qualquer complicação, desde que citássemos o repositório"]},{"tag":"ref","content":[{"tag":"text","content":["github-diagram"]}]},{"tag":"text","content":[" onde o diagrama se encontra para que você também possa colaborar."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_08/definindo_tipos.png \"Definindo tipos no Clojure\" label=definindo-tipos w=99%"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]}]}